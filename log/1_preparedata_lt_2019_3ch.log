------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  R:\B2\01 - Households\10 - Labour supply model\02 - Working area\02 - Training\EURO
> LAB 1.0\do\../log//1_preparedata_lt_2019_3ch.log
  log type:  text
 opened on:   6 Dec 2022, 21:37:48

. *******************************************************************
. ***************** INPUT DATA MERGED WITH OUTPUT DATA **************
. *******************************************************************
. di in r "1_preparedata started running: $S_TIME  $S_DATE"
1_preparedata started running: 21:37:48   6 Dec 2022

. if $INPUT_DATA == 1{
.         quiet insheet using "${path_EMoutput}/${country}_${pyear}_std.txt", tab names clear do
> uble
. 
.         sum idhh
.         tempfile udb
.         save `udb'
.         quiet insheet using "${path_EMinput}/original/${country}_${year}_${fil}.txt", clear
.         sum idhh
.         noisily cap unab allvars: _all
.         global allvars "`allvars'" 
.         merge 1:1 idper using `udb'
.         drop _merge
. }

. 
. *********************************************************************************
. ***************** SILC DATA MERGED WITH INPUT DATA AND OUTPUT DATA **************
. *********************************************************************************
. if $INPUT_DATA == 0{
. 
.         local name = "2021-11" 
.                                 
.         use "${path_SILC_data}\\${country}\\${year}\\${country}-SILC-${year}-version_`name'.dt
> a",clear
. 
.                 if "${country}" == "at" {
. 
.                                 gen double idperson_o = idperson
.                                 local var_merge  "idperson_o"
. 
.                         }
.                         else if "${country}" == "cz" {
.                             
.                                 format idperson %12.0f
.                                 rename idperson idorigperson
.                                 local var_merge "idorigperson"
.                                 
.                         }
.                         else if "${country}" == "lt" {
.                             
.                                 *drop idorigperson
.                                 gen idorigperson = idperson 
.                                 local var_merge "idorigperson"
.                                 
.                         }
.                         else if "${country}" == "sk" {
.                             
.                                 gen double r_rb030 = idperson
.                                 drop rb030
.                                 noi merge 1:1 r_rb030 using "${path_EMinput}/C19_R_HIDMAP_JRC_
> SK"
.                                 replace idperson = rb030
.                                 format idperson %12.0f
.                                 rename r_rb030 idorigperson 
.                                 local var_merge "idperson"
.                                 
.                         }
.                         else if "${country}" == "it" {
.                                 
.                                 di in r "here i am"
.                             local name = "2020-11"
.                 use "${path_SILC_data}\\${country}\\${year}\\${country}-SILC-${year}-version_`
> name'.dta",clear
. 
.                                 local var_merge "idperson"
.                                 
.                         }
.                         else {
. 
.                                 rename idperson idorigperson
.                                 local var_merge "idorigperson"
.                                 
.                         }
.                         
.                         
.                         
.         local var_silc "rb031 rb230 pl060 pl100 pl073 py200g pl075 pl074 pl076 pl080 pl040 pl0
> 20 pl085 pl087 pl086 pl090 pl089 pl120 pb210 pb220* pl031 rb210"
.                         local var_adhoc "pt060* pt070* pt090* pt100*"
.                         capture keep idhh idperson `var_merge' `var_silc' `var_adhoc'
.         tempfile udb
.         *sort idhh idperson
.         save `udb'
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000001.tmp saved as .dta format
.         
.         quiet insheet using "${path_EMinput}/original/${country}_${year}_${fil}.txt", clear
.         
.         format idperson %12.0f
. 
.         di in r "Merging key variable is `var_merge'"
Merging key variable is idorigperson
.         
.         noisily cap unab allvars: _all
.         global allvars "`allvars'" 
.         sort idhh idperson
.         merge 1:1 `var_merge' using `udb'
(variable idhh was long, now double to accommodate using data's values)
(variable idperson was long, now double to accommodate using data's values)
(variable idorigperson was long, now double to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                             4
        from master                         0  (_merge==1)
        from using                          4  (_merge==2)

    Matched                            11,356  (_merge==3)
    -----------------------------------------
. 
.         
.         sum idhh if _merge == 1

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
        idhh |          0
.         if r(N) > 0{
.                 di in r "wrong version"
.                 if "${country}" == "be"{
.                         keep if _merge ==3
.                 }
.                 else{
.                         continue,break
.                 }
.         }
.         else if r(N) == 0{
.                 di in r "The right UDB version for merging with inpu data is `name'"
The right UDB version for merging with inpu data is 2021-11
.                 drop if _merge ==2
(4 observations deleted)
.                 drop _merge
.         }
.         
.         if "${country}" == "cz"{
.                 rename idperson idperson_1
.                 rename idorigperson idperson 
.                 rename idperson_1 idorigperson
.                 format idperson %12.0f 
.         }
.         capture drop if _merge == 2
.         capture drop _merge
.         
. capture gen dcb = 1 if pb210 == "LOC" 
. replace dcb = 2 if pb210 == "EU" 
(44 real changes made)
. replace dcb = 3 if pb210 == "OTH" 
(591 real changes made)
. 
. count if !(dcb >= 1 & dcb <= 3) 
  1,457
. display in y "No of observations with missing or invalid citizenship (dcz): " r(N) 
No of observations with missing or invalid citizenship (dcz): 1457
. if r(N) > 0 noi display in r "MUST BE IMPUTED!"
MUST BE IMPUTED!
. 
. tab dcb, m

        dcb |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      9,264       81.58       81.58
          2 |         44        0.39       81.97
          3 |        591        5.20       87.17
          . |      1,457       12.83      100.00
------------+-----------------------------------
      Total |     11,356      100.00
. 
. * Missing values can be replaced by the citizenship of the mother
. 
. bysort idhh: egen temp_mode_dcb = mode(dcb), minmode
. replace dcb = temp_mode_dcb if dcb == .
(1,457 real changes made)
. 
. * Missing values are considered citizen of country of residence
. replace dcb = 1 if dcb == .
(0 real changes made)
. 
. if ${year} == 2019 {
.         
. * new country of birth
. gen cob = pb210
(1,457 missing values generated)
. replace cob = pt070 if pt070 != ustrupper("${country}")  
(5,878 real changes made)
. replace cob = ustrupper("${country}") if dcb == 1 
(10,693 real changes made)
. *replace dcb = 1 if dcb == .
. replace cob =pb210  if missing(cob)
(432 real changes made)
. }
. 
. gen bornEU_ctz = dcz==1 & dcb ==2
. gen bornnonEU_ctz = dcz==1 & dcb ==3
. gen migrant_EU = dcz!=1 & dcb ==2
. gen migrant_nonEU = dcz!=1 & dcb ==3
. 
. 
. 
. capture gen dyyrs = ${year} - rb031
. replace dyyrs = 80 if missing(dyyrs)
(10,423 real changes made)
. replace dyyrs = 0 if dyyrs<0
(0 real changes made)
. }

. 
. 
. save "${path_LSscen}/0_fullsample/${country}_${year}_${choices}ch_udb_input.dta" , replace
file ../data//LSscenarios//0_fullsample/lt_2019_3ch_udb_input.dta saved

. if ${year} < 2019 {
.         
.         use "${EM_dofiles}///sample_design.dta",clear
.         if "${country}" == "lu"{
.                 keep if lower(country)=="$country" & year == 2016
.         }
.         if "${country}" == "uk"{
.                 keep if lower(country)=="$country" & year == 2015
.         }
.         if "${country}" != "uk" & "${country}" != "lu"{
.                 keep if lower(country)=="$country" & year == $year
.         }
.         
.         tempfile sampling_design_$country
.         save `sampling_design_$country', replace
.         
.         //Merge dataset with sampling design                                    
.         use "${path_LSscen}/0_fullsample/${country}_${year}_${choices}ch_udb_input.dta" , clea
> r
.         *quiet insheet using "${path_EMinput}/original/${country}_${year}_${fil}.txt", clear
.         sum idhh
.         di "sampling_design `sampling_design_$country'"
.         merge m:1  idhh using `sampling_design_$country'
.         
.         if country=="LU" & year==2016{
.                 assert _merge==3 | _merge==2
.                 if `r(N)'==190{         //Number of HH corresponding to International civil se
> rvants
.                         keep if _merge==3
.                         tab _merge
.                 }
.                 else{
.                         window stopbox stop "Number of HH corresponding to International civil
>  servants is different than expected"
.                 }
.         }
.         else{
.                 keep if _merge==3
.                 tab _merge
.                 drop _merge
.         }
. 
. ****** Declare survey design for dataset (svyset) *********
. *svyset psu1 [pw=dwt],strata(strata1)
. }

. 
. if ${year} > 2018 {
.         quiet insheet using "${path_EMinput}/original/${country}_${year}_${fil}.txt", clear
.         capture keep idper dsr dsu01
.         capture gen dsr=1
.         tempfile sampling_design_$country
.         save `sampling_design_$country', replace
(file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000002.tmp not found)
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000002.tmp saved as .dta format
.         //Merge dataset with sampling design                                    
.         use "${path_LSscen}/0_fullsample/${country}_${year}_${choices}ch_udb_input.dta" , clea
> r
.         
.         merge m:1  idper using `sampling_design_$country'

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                            11,356  (_merge==3)
    -----------------------------------------
.         gen psu1 = dsu01
.         gen strata1 = dsr 
.         *svyset dsu01 [pw=dwt],strata(dsr)
.         drop _merge
. 
. }

. 
. 
. //variables from SILC data//
. 
. rename pl060 hrsmain // current period

. rename pl100 hrssec // current period

. egen monthft = rowtotal(pl073 pl075)

. egen monthpt = rowtotal(pl074 pl076)

. rename pl080 monthun // in income reference period

. qui recode hrsmain hrssec monthft monthpt monthun  (.=0) 

. 
. *------------------------------------------------------------
. * matrices and scalars
. *------------------------------------------------------------
. cap rename lhw_f lhw_flag

. 
. tempname pop

. tempname emp

. tempname ina

. tempname npart

. tempname popmat

. 
. sum dwt

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         dwt |     11,356    245.9794    240.7251    9.85729   2810.328

. scalar `pop' = r(sum)

. 
. sum dwt if inlist(les, 1, 2, 3, 5)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         dwt |      5,648    255.4818    250.2085    9.93936   2810.328

. scalar `emp' = r(sum)

. 
. sum dwt if inlist(les, 7)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         dwt |         80    307.3418     378.096    31.0528   2560.736

. scalar `ina' = r(sum)

. 
. sum dwt if !(inlist(les,0,1,2,3,4,5,6,7,8))

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         dwt |        217    262.0002    261.1546   11.44735   2007.827

. scalar `npart' = r(sum)

. 
. mat popmat_temp = (`pop', `emp', `ina', `npart')

. mat rownames popmat_temp = "${country}"

. mat colnames popmat_temp = "pop" "emp" "ina" "npart"

. 
. mat npop_$country = `pop'

. matsave npop_$country, saving path("${path_results}/population/") replace
data in memory will be removed temporarily, and restored later
Press any key to continue, or Break to abort
matrix npop_lt saved
data in memory restored

. 
. foreach px in "pop" "emp" "ina" "npart" {
  2.         tempname n`px'_file
  3.                 file open `n`px'_file' using "${path_results}/population/scalars/n`px'_$cou
> ntry", write text replace
  4.         file write `n`px'_file' "`=``px'''" _n
  5.         file close `n`px'_file'  
  6. }

. 
. if $conpos == 1 {
.         mat popmat = popmat_temp
.         matsave popmat, saving path("${path_results}/population/") replace
data in memory will be removed temporarily, and restored later
Press any key to continue, or Break to abort
matrix popmat saved
data in memory restored
. }

. else {
.         matload popmat, overwrite saving path("${path_results}/population/")
.         mat popmat = popmat \ popmat_temp
.         matsave popmat, saving path("${path_results}/population/") replace
. }

. 
. 
. quiet sort   idperson

. qui replace dag = 0 if dag < 0

. 
. noisily cap unab bunvars_log: bun* bsa*

. noisily cap unab yvars_log: yem* yse*

. noisily cap unab pvars_log: poa* pdi* ps* bsu* boa*

. noisily cap unab capvars_log: yi* yp* yo*

.          
. 
. *------------------------------------------------------------
. * get income variables
. *------------------------------------------------------------
.                                  
. // get country and year specific income variables
. get_income_variables

. 
. foreach nam1 in $yem_vars $yse_vars $capital_vars $pdi_vars $bhl_vars $bun_vars $bsa_vars $psu
> _vars $pen_vars $bma_vars{
  2.         foreach nam2 in `nam1'{
  3.                 capture gen `nam2' = 0
  4.         }
  5. }

. 
. // disability income
. quiet egen pdi_all = rowtotal($pdi_vars)  

. // sickness and maternity benefit
. quiet egen bhl_all = rowtotal($bhl_vars)  

. // Employment income
. quiet egen y_yem = rowtotal($yem_vars)

. // Self-employment income
. quiet egen y_yse = rowtotal($yse_vars)

. // Unemployment benefits
. quiet egen bun_all = rowtotal($bun_vars) 

. // Social Assistance benefits
. quiet egen bsa_all = rowtotal($bsa_vars) 

. // Pensions
. quiet egen poa_all = rowtotal($pen_vars)

. // Pensions
. quiet egen psu_all = rowtotal($psu_vars)

. // Pensions
. quiet gen pen = psu_all + poa_all + pdi_all + bhl_all 

. // maternity income
. quiet egen bma_all = rowtotal($bma_vars)  

. 
. *quiet bys idhh: gen hhsize = _N
. // Capital
. quiet egen capital = rowtotal($capital_vars)  

. 
. 
. 
. *------------------------------------------------------------
. * Earning variables
. *------------------------------------------------------------
. foreach var of varlist $yse_vars {
  2.         replace `var' = 0 if `var'<0
  3. }
(0 real changes made)

. replace yse = 0 if yse < 0
(0 real changes made)

.                 
. // All employment and selfemployment income
. quiet egen y = rowtotal($income_vars) 

. 
. // Economic Status
. quiet generate employee     = 0

. quiet generate selfemployed = 0

. quiet generate unemployed   = 0

. quiet generate retired      = 0

. quiet generate student      = 0

. quiet generate inactive     = 0

. quiet generate disable      = 0

. quiet generate benefiter   = 0

. quiet generate sick   = 0

. quiet generate pensioner      = 0

. quiet gen military = 0

. quiet gen carer = 0

. gen solo_self = 0

. gen other = 0

. gen unemployed_ben = 0

. gen unmatched = 0

. 
. // mean (positive) labor income in the population
. quiet egen lab   = mean(y) if y > 0

. quiet egen labym = mean(lab) 

. 
. 
. 
. /*capture sum py200g 
>         if r(N) > 0{
>         gen emp_income = py200g
>         replace emp_income = yem if emp_income ==.
>         }
>         else{
>         gen emp_income = y_yem
>         }
> */      
. gen emp_income = y_yem

. gen selfemp_income = y_yse      

. 
.                 
. if "${country}" == "it"{
.         replace yseev = 0 if yseev < 0 
.         *replace yseev = 0 if bma_all>0
.         *replace ysenr = 0 if bma_all>0
.         gen evas = ysenr / yse
.         gen precar_income = yemtj
.         gen earns = emp_income + precar_income + selfemp_income                         
.         gen earnstype = 0 if earns == 0 // to identify employee or self-employed for later ass
> ignment of yem or yse
.         replace earnstype = 1 if emp_income >= selfemp_income & emp_income >= precar_income & 
> earns > 0 //"employed"
.         replace earnstype = 2 if selfemp_income > emp_income & selfemp_income >= precar_income
>  & earns > 0 //"self employed"
.         replace earnstype = 3 if precar_income > emp_income & precar_income > selfemp_income &
>  earns > 0 //"self employed"
. }

. else {
.         gen earns = emp_income + selfemp_income  
.         gen earnstype = 0 if earns == 0 // to identify employee or self-employed for later ass
> ignment of yem or yse
(6,255 missing values generated)
.         replace earnstype = 1 if emp_income >= selfemp_income & earns > 0 //"employed"
(5,270 real changes made)
.         replace earnstype = 2 if selfemp_income > emp_income & earns > 0 //"self employed"
(985 real changes made)
. }

. 
. 
. *-----------------------------------------------
. * Definition of flexible units per household
. *-----------------------------------------------
. *Age Interval
. gen agemain = (dag >= $MIN_AGE & dag <=$MAX_AGE) 

. gen couple = (idpartner > 0)    

. 
. tempfile partner

. save  `partner'
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000003.tmp saved as .dta format

. keep idpartner agemain pen

. rename idpartner idperson

. rename agemain agepartner

. rename pen penpartner

. merge idperson using `partner', sort uniqusing
(you are using old merge syntax; see [D] merge for new syntax)
variable idperson does not uniquely identify observations in the master data
(variable idperson was long, now double to accommodate using data's values)

. drop if _merge == 1
(5,686 observations deleted)

. drop _m

. 
. lab def couplelab 0 "No" 1 "Yes"

. lab val couple couplelab 

. 
. lab def agelab 0 "Not in working age" 1 "Working age"

. *lab val dag agelab 
. 
. noi tab dag couple

           |        couple
       dag |        No        Yes |     Total
-----------+----------------------+----------
         0 |        52          0 |        52 
         1 |        64          0 |        64 
         2 |        88          0 |        88 
         3 |        94          0 |        94 
         4 |        96          0 |        96 
         5 |       100          0 |       100 
         6 |        94          0 |        94 
         7 |        92          0 |        92 
         8 |        90          0 |        90 
         9 |       101          0 |       101 
        10 |       100          0 |       100 
        11 |        97          0 |        97 
        12 |        84          0 |        84 
        13 |       100          0 |       100 
        14 |        98          0 |        98 
        15 |       100          0 |       100 
        16 |       100          0 |       100 
        17 |       111          0 |       111 
        18 |       112          0 |       112 
        19 |       124          0 |       124 
        20 |       101          0 |       101 
        21 |        94          1 |        95 
        22 |        89          3 |        92 
        23 |        67          8 |        75 
        24 |        77         13 |        90 
        25 |        67         19 |        86 
        26 |        57         25 |        82 
        27 |        60         22 |        82 
        28 |        51         38 |        89 
        29 |        48         44 |        92 
        30 |        58         48 |       106 
        31 |        51         61 |       112 
        32 |        50         68 |       118 
        33 |        48         54 |       102 
        34 |        35         65 |       100 
        35 |        30         73 |       103 
        36 |        36         79 |       115 
        37 |        27         65 |        92 
        38 |        30         78 |       108 
        39 |        55         73 |       128 
        40 |        40         58 |        98 
        41 |        48         75 |       123 
        42 |        41         77 |       118 
        43 |        38         75 |       113 
        44 |        51        102 |       153 
        45 |        47        115 |       162 
        46 |        39        112 |       151 
        47 |        53        129 |       182 
        48 |        57        139 |       196 
        49 |        43        138 |       181 
        50 |        50        147 |       197 
        51 |        66        138 |       204 
        52 |        60        150 |       210 
        53 |        49        125 |       174 
        54 |        56        140 |       196 
        55 |        56        171 |       227 
        56 |        56        163 |       219 
        57 |        59        163 |       222 
        58 |        62        173 |       235 
        59 |        70        194 |       264 
        60 |        55        158 |       213 
        61 |        63        129 |       192 
        62 |        46        131 |       177 
        63 |        53        142 |       195 
        64 |        63        145 |       208 
        65 |        47        108 |       155 
        66 |        62        130 |       192 
        67 |        63        105 |       168 
        68 |        53        102 |       155 
        69 |        54        109 |       163 
        70 |        39         96 |       135 
        71 |        53         90 |       143 
        72 |        44         71 |       115 
        73 |        65         64 |       129 
        74 |        34         67 |       101 
        75 |        54         75 |       129 
        76 |        60         67 |       127 
        77 |        60         66 |       126 
        78 |        49         47 |        96 
        79 |        63         65 |       128 
        80 |        67         53 |       120 
        81 |       470        229 |       699 
-----------+----------------------+----------
     Total |     5,686      5,670 |    11,356 

. 
. // presence of dependent individuals by HH
. gen  old70 = (dag >= 70 | retired + disable > 0) & (yem + yse) < labym / 10

. quiet bys idhh: egen pold = max(old70)

. quiet bys idhh: egen nold = sum(old)

. 
. preserve

. import excel "SMW.xlsx", firstrow clear
(4 vars, 28 obs)

. keep if co=="$country" 
(27 observations deleted)

. local SMW = SMW2019[1]

. di "`SMW'"
555

. restore

. 
. // Coverting variables to monthly values
. gen monthly_MW = `SMW' 

. gen hourly_MW = `SMW'/(40*4.34) 

.         
. *************************************************************************
. *********************** timing of LS- survey week versus income year ****
. *************************************************************************
. replace yemmy =  pl073 + pl074
(3,589 real changes made, 1,572 to missing)

. replace ysemy =  pl075 + pl076  
(2,965 real changes made, 1,572 to missing)

. replace yemmy = 0 if yemmy == . 
(1,572 real changes made)

. replace ysemy = 0 if ysemy == . 
(1,572 real changes made)

. 
. gen yem_new = (y_yem *12) / yemmy
(6,608 missing values generated)

. replace yem_new = 0 if yem_new ==.
(6,608 real changes made)

. gen yse_new = (y_yse *12) / ysemy
(10,748 missing values generated)

. replace yse_new = 0 if yse_new ==.
(10,748 real changes made)

. 
. *-----------------------------------------------------------------------
. * Hours worked, earnings and computaion of hourly wage
. *-----------------------------------------------------------------------
. /*PL073: Number of months spent at full-time work as employee 
>         PL074: Number of months spent at part-time work as employee 
>         PL075: Number of months spent at full-time work as self-employed (including family wor
> ker) 
>         PL076: Number of months spent at part-time work as self-employed (including family wor
> ker) */
. gen month_ft_2 = pl073
(1,572 missing values generated)

. gen month_ft_3 = pl075
(1,572 missing values generated)

. gen month_pt_2 = pl074
(1,572 missing values generated)

. gen month_pt_3 = pl076
(1,572 missing values generated)

. 
. gen dgn_m = (dgn == 1)

. gen dgn_f = (dgn == 0)

. 
. gen hours = hrsmain + hrssec

. gen totmonthsFTPT = monthft + monthpt

. gen unstable = (monthft>0) & (monthpt >0)

. 
. //Adjustment of hours
. gen adjusted_hours = hours

. 
. foreach stat in 2 3{
  2.         foreach s in m f{ 
  3.                 di in r "LS = `stat' and gender = `s'"
  4.                 sum hours if month_ft_`stat' == 12 & dag >= $MIN_AGE & dag <=$MAX_AGE & dgn
> _`s' == 1 & les == `stat'
  5.                 local ft_`stat'_`s' = r(mean)
  6.                 replace adjusted_hours = `ft_`stat'_`s'' if hours <30 & monthft>0 & monthft
>  > monthpt & dgn_`s' == 1 & dag >= $MIN_AGE & dag <=$MAX_AGE & unstable ==0 & les == `stat'
  7. 
.                 sum hours if month_pt_`stat' == 12 &  les == `stat' & dgn_`s' == 1
  8.                 local pt_`stat'_`s' = r(mean)
  9.                 replace adjusted_hours = `pt_`stat'_`s'' if hours >31 & monthpt>0 & monthft
>  < monthpt & dgn_`s' == 1 & les == `stat' & unstable ==0
 10. 
.                 *replace adjusted_hours = round(((`ft_`stat'_`s''*monthft + `pt_`stat'_`s''*mo
> nthpt)/12),1)  if unstable == 1
.                 
.         }
 11. }
LS = 2 and gender = m

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       hours |          1          30           .         30         30
(1 real change made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       hours |          0
(3 real changes made, 3 to missing)
LS = 2 and gender = f

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       hours |          1          60           .         60         60
(1 real change made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       hours |          0
(2 real changes made, 2 to missing)
LS = 3 and gender = m

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       hours |          4          40    8.164966         30         50
(10 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       hours |          2          30           0         30         30
(9 real changes made)
LS = 3 and gender = f

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       hours |          5          50    14.14214         40         70
(32 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       hours |          4          20    8.164966         10         30
(18 real changes made)

. 
. 
. if $FLEX_SELECT == 1 {
.         //labour status based on les variable
.         
.         replace retired      = 1 if les == 4
(2,958 real changes made)
.         replace student      = 1 if les == 6 | les == 0
(2,040 real changes made)
.         replace disable      = 1 if les == 8 
(413 real changes made)
.         replace other    = 1 if les == 9
(217 real changes made)
.         gen out_of_labour = (retired + student + disable +other==1)
.         
.         replace employee     = 1 if les == 3 & yem_new > 0 & adjusted_hours >0
(4,329 real changes made)
.         *replace solo_self       = 1 if les ==2 & pl040 == 2 & yse_new >0 & adjusted_hours >0
.         replace selfemployed = 1 if les ==2 & yse_new >0 & adjusted_hours >0
(369 real changes made)
.         replace unemployed = 1 if pl020 ==1 & out_of_labour ==0 & les==5
(416 real changes made)
.         replace inactive = 1 if pl020 ==2 & (out_of_labour + employee + selfemployed + unemplo
> yed== 0)
(219 real changes made)
.         
.         // Ensure people have only one economic status
.         gen working = employee + selfemployed 
.         replace unmatched = 1 if working + unemployed + inactive + out_of_labour == 0   
(395 real changes made)
.         quiet gen overal = working + unemployed + inactive + out_of_labour + unmatched 
.         assert overal == 1
. }

. 
. 
. if $FLEX_SELECT == 0 {
.         //labour status based on income reference period
.         replace retired  = 1 if pl085>0 & pl085!=. & pl085 > bunmy+monthun +yemmy + ysemy
.         replace student = 1 if pl087 >0 & pl087!=. & pl087 > bunmy+monthun +yemmy + ysemy
.         replace disable  = 1 if pl086 > 0 & pl086!=. & pl086 > bunmy+monthun +yemmy + ysemy
.         gen out_of_labour = (retired + student + disable ==1)
.         replace out_of_labour = 0 if pl090 > pl086 | pl090 > pl089
. 
.         replace inactive  =  1 if pl089 > 0  & pl089 !=. & pl089 > bunmy+monthun +yemmy + ysem
> y
.         replace inactive = 1 if pl090 > 0  & pl090!=.
.         replace inactive = 0 if out_of_labour == 1
.         
.         replace employee     = 1 if earnstype==1 & (pl073+pl074>0)
.         replace employee = 0 if yemmy < bunmy + monthun 
.         replace employee  = 0 if out_of_labour ==1|inactive ==1
.         
.         replace selfemployed = 1 if earnstype==2 & (pl075+pl076>0)
.         replace selfemployed  = 0 if out_of_labour ==1 | inactive ==1
.         replace selfemployed = 0 if ysemy < bunmy + monthun
.         replace solo_self        = 1 if pl040 == 2 & selfemployed==1
.         
.         replace unemployed = 1 if monthun >0 | bunmy >0 
.         replace unemployed = 0 if yem_new > monthly_MW & employee ==1
.         replace employee = 0 if yem_new < monthly_MW & employee ==1
.         replace unemployed = 0 if yse_new > monthly_MW & selfemployed ==1
.         replace selfemployed = 0 if yse_new < monthly_MW & selfemployed ==1
.         replace unemployed = 0 if out_of_labour ==1
.         
.         replace inactive = 0 if unemployed == 1
.         
.         // Ensure people have only one economic status
.         gen working = employee + selfemployed 
. 
.         replace unmatched = 1 if working + unemployed + inactive + out_of_labour == 0   
.         quiet gen overal = working + unemployed + inactive + out_of_labour + unmatched 
.         assert overal == 1
. }

. 
. 
. 
. *-----------------------------------------------------------------------
. * Employment status and sectors
. *-----------------------------------------------------------------------
. 
. gen LSstatus = 3        if inactive ==1 
(11,137 missing values generated)

. replace LSstatus = 4 if unemployed ==1 
(416 real changes made)

. replace LSstatus = 1 if employee ==1
(4,329 real changes made)

. replace LSstatus = 2 if selfemployed ==1
(369 real changes made)

. replace LSstatus = 0 if LSstatus == .
(6,023 real changes made)

. 
. lab def LSstatuslab 0 "out" 1 "employee" 2 "selfemployed" 3 "inactive" 4 "unemployed"

. lab val LSstatus LSstatuslab 

. tab LSstatus

    LSstatus |      Freq.     Percent        Cum.
-------------+-----------------------------------
         out |      6,023       53.04       53.04
    employee |      4,329       38.12       91.16
selfemployed |        369        3.25       94.41
    inactive |        219        1.93       96.34
  unemployed |        416        3.66      100.00
-------------+-----------------------------------
       Total |     11,356      100.00

. 
. *lab def lindi_lab 0 "none" 1 "Agriculture" 2 "Mine_manifac" 3 "Construction" 4 "Wholesale" 5 
> "Hotel_Rest" 6 "Trans_Com" 7 "Finance" 8 "Real_estate" 9 "Public_administ_def" 10 "Education" 
> 11 "Health_socialwork" 12 "Other"
. *lab val lindi lindi_lab 
. 
. // sector definition can changed
. //for example public versus private
. // regular work verus irregular
. //
.  
. if "$SECTORS" == "1"{
.         gen sector = 0
.         replace sector =1 if lindi !=0
(6,369 real changes made)
. }

. 
. if "$SECTORS" == "2"{
.         gen sector = 0
.         replace sector = 1 if lindi >= 2 & lindi <= 5
.         replace sector = 2 if lindi!=0 & (sector !=1)
. }

. 
. tab sector 

     sector |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      4,987       43.92       43.92
          1 |      6,369       56.08      100.00
------------+-----------------------------------
      Total |     11,356      100.00

. 
. *-----------------------------------------------------------------------
. * Sample selection for wage equation 
. *-----------------------------------------------------------------------
. if $UNEMPLOYMENT == 1 {
.         if "$EmplStatus" == "2"{
.                 quiet gen wage_subsample_m = ///
>                                   (employee == 1 | unemployed == 1 | selfemployed == 1 | inact
> ive == 1) ///
>                                   & dgn == 1 & dag >= $MIN_AGE & dag <=$MAX_AGE
.                 quiet gen wage_subsample_f = ///
>                                   (employee == 1 | unemployed == 1 | selfemployed == 1 | inact
> ive == 1) ///
>                                   & dgn == 0 & dag >= $MIN_AGE & dag <=$MAX_AGE
.         }
.         if "$EmplStatus" == "1"{ 
.                 quiet gen wage_subsample_m = ///
>                                   (employee == 1 | unemployed == 1 | inactive == 1) ///
>                                   & dgn == 1 & dag >= $MIN_AGE & dag <=$MAX_AGE
.                 quiet gen wage_subsample_f = ///
>                                   (employee == 1 | unemployed == 1 | inactive == 1) ///
>                                   & dgn == 0 & dag >= $MIN_AGE & dag <=$MAX_AGE
. 
.         }
. }

.         
. if $UNEMPLOYMENT == 0 {
.         if "$EmplStatus" == "2"{
.                 quiet gen wage_subsample_m = ///
>                                   (employee == 1 | selfemployed == 1 | inactive == 1| unemploy
> ed == 1) ///
>                                   & dgn == 1 & dag >= $MIN_AGE & dag <=$MAX_AGE
.                 quiet gen wage_subsample_f = ///
>                                   (employee == 1 | selfemployed == 1 | inactive == 1| unemploy
> ed == 1) ///
>                                   & dgn == 0 & dag >= $MIN_AGE & dag <=$MAX_AGE
.         }
.         if "$EmplStatus" == "1"{ 
.                 quiet gen wage_subsample_m = ///
>                                   (employee == 1 | inactive == 1| unemployed == 1) ///
>                                   & dgn == 1 & dag >= $MIN_AGE & dag <=$MAX_AGE
.                 quiet gen wage_subsample_f = ///
>                                   (employee == 1 | inactive == 1| unemployed == 1) ///
>                                   & dgn == 0 & dag >= $MIN_AGE & dag <=$MAX_AGE
.         }
. }

. 
. 
. gen LSind =  wage_subsample_m ==1 |wage_subsample_f ==1 

. replace LSind = 0 if sector ==0 & (employee == 1| selfemployed == 1)
(0 real changes made)

. replace LSind =0 if unemployed ==1 & adjusted_hours >0 
(1 real change made)

. replace LSind =0 if inactive ==1 & adjusted_hours >0 
(1 real change made)

. 
. *-----------------------------------------------------------------------
. * Identification of flexible unit: Main Earner and his/her partner**
. *-----------------------------------------------------------------------
. 
. gsort idhh -LSind -couple -earns  -dag 

. // added dummy for being in couple; //
. //among those flexible, selected those in couple first 
. bysort idhh: gen n= _n

. gen MainEarn = n == 1 & LSind == 1

.  
. tempfile partner

. save  `partner'
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000005.tmp saved as .dta format

. keep idpartner MainEarn

. rename idpartner idperson

. rename MainEarn MEpartner

. merge idperson using `partner', sort uniqusing
(you are using old merge syntax; see [D] merge for new syntax)
variable idperson does not uniquely identify observations in the master data
(variable idperson was long, now double to accommodate using data's values)
(label couplelab already defined)
(label LSstatuslab already defined)

. drop if _merge == 1
(5,686 observations deleted)

. drop _m

. 
. replace MEpartner = 0 if MEpartner == .
(5,686 real changes made)

. gen flex = MainEarn == 1 | MEpartner == 1

. 
. * Identification of flexible couple
. gen LScouple = (flex == 1 & couple == 1)

. 
. noi di in y "Same sex couple"
Same sex couple

. bysort idhh LScouple: egen samesex =sum(dgn) if flex ==1
(6,405 missing values generated)

. lab def samesexlab 1 "Different sex" 0 "Same sex - females" 2 "Same sex - males"

. lab val samesex samesexlab 

. noi tab samesex if LScouple == 1

           samesex |      Freq.     Percent        Cum.
-------------------+-----------------------------------
     Different sex |      3,736      100.00      100.00
-------------------+-----------------------------------
             Total |      3,736      100.00

. replace flex=0 if samesex != 1 & LScouple == 1
(0 real changes made)

. *assert samesex == 1 if LScouple == 1
. replace flex = 0 if LSind ==0
(703 real changes made)

. 
. 
. replace flex = 0 if adjusted_hours == 0 & (LSstatus == 1|LSstatus == 2)
(0 real changes made)

. 
. *replace LSstatus = 1 if adjusted_hours > 0 & yem_new>0 & yem_new>yse_new 
. 
. *replace LSstatus = 2 if adjusted_hours > 0 & yse_new>0 & yse_new > yem_new
. *replace sector = 0 if LSstatus == 3|LSstatus == 4 
. 
. *******************************Flexible household
.         // Flexible Women
. gen flex_f = (flex == 1 & dgn == 0)

. gen flex_m = (flex == 1 &  dgn == 1)

. 
. // Number of potentially LS adjusting Households
. sort idhh

. quiet by idhh: egen n_lsflex = sum(flex)

. quiet by idhh: egen n_lsflex_coup = sum(LScouple)

. quiet by idhh: egen flex_ff = sum(flex_f)

. quiet by idhh: egen flex_mm = sum(flex_m)

. 
. gen flex_hh = 0

. replace flex_hh = 1 if n_lsflex == 2 
(3,595 real changes made)

. replace flex_hh = 2 if n_lsflex == 1 & n_lsflex_coup == 0 & flex_ff == 1  /* single female hh*
> /
(1,563 real changes made)

. replace flex_hh = 3 if n_lsflex == 1 & n_lsflex_coup == 0 & flex_mm == 1  /* single male hh*/
(795 real changes made)

. 
. replace flex_hh = 4 if n_lsflex == 1 & flex_ff == 1 & n_lsflex_coup == 2/* semiflexible female
>  hh*/
(1,079 real changes made)

. replace flex_hh = 5 if n_lsflex == 1 & flex_mm == 1 & n_lsflex_coup  == 2  /* semiflexible mal
> e hh*/
(1,019 real changes made)

. assert flex_f == 0 if dgn == 1

. assert flex_m == 0 if dgn == 0

. sum dwt if flex_hh > 0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         dwt |      8,051    260.1481    253.6033    9.93936   2810.328

. 
. 
. bys idhh:egen check_flexhh = total(flex_hh)

. bys idhh:gen N = _N

. replace check_flexhh = check_flexhh/N
(7,502 real changes made)

. assert check_flexhh == flex_hh

. 
. tempname nflex

. scalar `nflex' = r(sum)

. tempname nflex_file

. 
. file open `nflex_file' using "${path_results}/population/scalars/nflex_$country", write text r
> eplace

. file write `nflex_file' "`=`nflex''" _n

. file close `nflex_file'  

. 
. 
. replace earns = emp_income if employee ==1
(630 real changes made)

. replace earns = y_yse if selfemployed ==1
(96 real changes made)

. replace earns = 0 if (unemployed + inactive == 1)
(346 real changes made)

. 
. gen hourly_wage = earns / (adjusted_hours*4.333) 
(6,328 missing values generated)

. 
. //hourlywage is missing for those who report zero hours (unemployed or inactive) or zero worki
> ng months  
. misstable summarize hourly_wage if flex==1
                                                               Obs<.
                                                +------------------------------
               |                                | Unique
      Variable |     Obs=.     Obs>.     Obs<.  | values        Min         Max
  -------------+--------------------------------+------------------------------
   hourly_wage |       508               3,740  |   >500   .0051158    66.42359
  -----------------------------------------------------------------------------

. 
. //hourlywage is zero for those who report zero income but positive hours and working months  
. count if hourly_wage==0 & flex==1
  0

. *replace hourly_wage = min_wage if hourly_wage < min_wage & employee ==1
. 
. sum earns hourly_wage if wage_subsample_m ==1 & (hourly_wage !=0 & hourly_wage !=.)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       earns |      1,849    990.2514    760.9864     6.9775   5935.381
 hourly_wage |      1,849    5.565913    4.384266   .0402579   66.42359

. sum earns hourly_wage if wage_subsample_f ==1 & (hourly_wage !=0 & hourly_wage !=.)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       earns |      2,278    795.7986     541.303   .8866667   5538.165
 hourly_wage |      2,278     4.65574    3.274222   .0051158   56.36203

. 
. foreach s in m f{ 
  2.     quiet{
  3.             
.         
. 
.         foreach emp in 1(1)2 {
  4.                 local quant_top_m = 99.0
  5.                 local quant_top_f = 99.0
  6. 
.                 local quant_bot_m = 1
  7.                 local quant_bot_f = 1
  8. 
.                 di in r "`s'" 
  9.                 // calculate a "minimum productivity" (bottom 2% cutoff)among those in-work
> , to be used below 
.                 di in r "before trimming"
 10.                 sum hourly_wage if wage_subsample_`s' ==1 & (hourly_wage !=0 & hourly_wage 
> !=.),d
 11.           
.                 egen mw_`s' = pctile(hourly_wage) ///
>                 if (wage_subsample_`s' == 1) & (hourly_wage>0), p(`quant_bot_`s'')
 12.                 egen minw10_`s' = mean(mw_`s') 
 13.                 gen  minw_`s' = minw10_`s'
 14.                 drop mw_`s'
 15.                 sum minw_`s'
 16.                 
.                 // calculate a "maximum productivity" (top 0.5% cutoff) among those in-work, t
> o be used below
.                 egen tw_`s' = pctile(hourly_wage) ///
>                 if (wage_subsample_`s' == 1) & (hourly_wage>0), p(`quant_top_`s'')
 17.                 egen topw10_`s' = mean(tw_`s')
 18.                 gen  topw_`s' = topw10_`s'
 19.                 sum  topw_`s'
 20.                 replace hourly_wage = minw_`s' if (hourly_wage < minw_`s') & (dgn_`s' == 1)
>  & wage_subsample_`s' ==1 & hourly_wage!=. & hourly_wage !=0
 21.                 replace hourly_wage = topw_`s' if (hourly_wage > topw_`s') & (dgn_`s' == 1)
>  & wage_subsample_`s' ==1  & hourly_wage !=0 & hourly_wage !=.
 22.                 
.                 di in r "after trimming"
 23.                 sum hourly_wage if (dgn_`s' == 1) & wage_subsample_`s' ==1 & (hourly_wage !
> =0 & hourly_wage !=.),d
 24.                 drop tw_`s'
 25.         }
 26.         }
 27. }
m
before trimming
after trimming
f
before trimming
after trimming

. 
. sum earns hourly_wage if wage_subsample_m ==1 & (hourly_wage !=0 & hourly_wage !=.)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       earns |      1,849    990.2514    760.9864     6.9775   5935.381
 hourly_wage |      1,849    5.475543     3.75684   .4319515    23.1565

. sum earns hourly_wage if wage_subsample_f ==1 & (hourly_wage !=0 & hourly_wage !=.)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       earns |      2,278    795.7986     541.303   .8866667   5538.165
 hourly_wage |      2,278     4.59642    2.848685   .4038099   17.12956

. 
. 
. gen lnhourlywage  = ln(hourly_wage)
(6,444 missing values generated)

. 
. 
. *=======================================================================
. *            Prepare data for wage estimations
. *=======================================================================
. 
. 
. *-----------------------------------------
. * Marital/cohabitation status
. *-----------------------------------------
. quietly gen married = (dms == 2)

. gen married_out_hh = (married ==1 & idpartner ==0) 

. 
. *-----------------------------------------
. * Children age groups
. *-----------------------------------------
. gen ch          = ((dag < 18) | (dag >= 18 & les == 6))

. gen ch3         = (dag < 3)

. gen ch36        = (dag >= 3 & dag < 6)

. gen ch6p        = ((dag >= 6 & dag < 18) | (dag >= 18 & les == 6))

. gen ch18p = ((dag >= 18 & idmother != 0 & idmother != .)|(dag < 18 & idfather != 0 & idfather 
> != .))

. gen ch014 = (dag <= 14)

. 
. *---------------------------------------------------
. * Calculate the number of children in each age group
. *---------------------------------------------------
. sort idhh idperson

. tempfile input

. save `input'
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000006.tmp saved as .dta format

. 
. foreach childgr of varlist ch* {
  2.         noi di
  3.         noi di in y "Children age group: `childgr'"
  4. 
.         keep if `childgr' == 1
  5.         keep idhh idmother idfather dag 
  6.         gen double temp_parent = idmother
  7.         replace temp_parent = idfather if temp_parent == 0
  8.         rename temp_parent idperson
  9.         bysort idperson: gen num`childgr' = _N
 10.         bysort idperson: egen youngage`childgr' = min(dag)
 11.         duplicates drop idperson, force
 12.         drop dag idmother idfather
 13.         sort idhh idperson
 14.         merge idhh idperson using `input', sort uniqusing
 15. 
.         drop if _m == 1
 16.         drop _m
 17.         recode num`childgr' (. = 0)
 18.         save `input', replace
 19. 
. } // foreach childgr

Children age group: check_flexhh
(7,761 observations deleted)
(22 real changes made)

Duplicates in terms of idperson

(2,772 observations deleted)
(you are using old merge syntax; see [D] merge for new syntax)
(label samesexlab already defined)
(label couplelab already defined)
(label LSstatuslab already defined)
(1 observation deleted)
(10534 changes made to numcheck_flexhh)
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000006.tmp saved as .dta format

Children age group: ch
(9,313 observations deleted)
(55 real changes made)

Duplicates in terms of idperson

(762 observations deleted)
(you are using old merge syntax; see [D] merge for new syntax)
(label LSstatuslab already defined)
(label couplelab already defined)
(label samesexlab already defined)
(1 observation deleted)
(10076 changes made to numch)
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000006.tmp saved as .dta format

Children age group: ch3
(11,152 observations deleted)
(6 real changes made)

Duplicates in terms of idperson

(5 observations deleted)
(you are using old merge syntax; see [D] merge for new syntax)
(label samesexlab already defined)
(label couplelab already defined)
(label LSstatuslab already defined)
(1 observation deleted)
(11158 changes made to numch3)
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000006.tmp saved as .dta format

Children age group: ch36
(11,066 observations deleted)
(8 real changes made)

Duplicates in terms of idperson

(23 observations deleted)
(you are using old merge syntax; see [D] merge for new syntax)
(label LSstatuslab already defined)
(label couplelab already defined)
(label samesexlab already defined)
(0 observations deleted)
(11089 changes made to numch36)
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000006.tmp saved as .dta format

Children age group: ch6p
(9,807 observations deleted)
(41 real changes made)

Duplicates in terms of idperson

(501 observations deleted)
(you are using old merge syntax; see [D] merge for new syntax)
(label samesexlab already defined)
(label couplelab already defined)
(label LSstatuslab already defined)
(1 observation deleted)
(10309 changes made to numch6p)
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000006.tmp saved as .dta format

Children age group: ch18p
(8,600 observations deleted)
(49 real changes made)

Duplicates in terms of idperson

(796 observations deleted)
(you are using old merge syntax; see [D] merge for new syntax)
(label LSstatuslab already defined)
(label couplelab already defined)
(label samesexlab already defined)
(0 observations deleted)
(9396 changes made to numch18p)
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000006.tmp saved as .dta format

Children age group: ch014
(10,006 observations deleted)
(46 real changes made)

Duplicates in terms of idperson

(445 observations deleted)
(you are using old merge syntax; see [D] merge for new syntax)
(label samesexlab already defined)
(label couplelab already defined)
(label LSstatuslab already defined)
(1 observation deleted)
(10452 changes made to numch014)
file C:\Users\narazed\AppData\Local\Temp\ST_1b78_000006.tmp saved as .dta format

. 
. sum youngage*

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
youngage~014 |        904    6.548673    4.212235          0         14
youngage~18p |      1,960    23.99235     17.1818          0         75
youngagech6p |      1,047    12.84145    4.887812          6         30
youngagech36 |        267     3.94382    .8044923          3          5
 youngagech3 |        198    1.161616    .8149251          0          2
-------------+---------------------------------------------------------
  youngagech |      1,280    9.989844    6.543346          0         30
youngagech~h |        822    17.84307    14.86204          0         64

. drop youngagech?* // keep only <youngagech>

. 
. *---------------------------------------------------------------------
. * Assign to each partner the sum of the children of the other partner
. *---------------------------------------------------------------------
. 
. foreach var of varlist youngage numch* {
  2.         rename `var' p_`var'
  3. } 

. 
. keep idhh idpartner p_youngage p_numch*

. rename idpartner idperson

. drop if idperson == 0
(5,686 observations deleted)

. sort idhh idperson

. merge idhh idperson using `input', sort uniqusing
(you are using old merge syntax; see [D] merge for new syntax)
(variable idperson was long, now double to accommodate using data's values)
(label LSstatuslab already defined)
(label couplelab already defined)
(label samesexlab already defined)

. 
. drop if _m == 1
(0 observations deleted)

. drop _m

. 
. replace youngagech = min(youngagech, p_youngagech)
(875 real changes made)

. 
. foreach var of varlist numch* {
  2. *       replace numch = 0 if numch == .
.         assert `var' != .
  3.         recode p_`var' (. = 0)
  4.         replace `var' = `var' + p_`var'
  5. } 
(5686 changes made to p_numch014)
(618 real changes made)
(5686 changes made to p_numch18p)
(1,266 real changes made)
(5686 changes made to p_numch6p)
(710 real changes made)
(5686 changes made to p_numch36)
(192 real changes made)
(5686 changes made to p_numch3)
(152 real changes made)
(5686 changes made to p_numch)
(875 real changes made)
(5686 changes made to p_numcheck_flexhh)
(708 real changes made)

. 
. drop p_numch* p_youngagech

. capture rename numch18p nchild18p

. capture rename numch014 nchild014

. 
.         
. *-----------------------------------------
. * Age
. *-----------------------------------------
. gen age = dag

. gen age2 = dag * dag

. 
. 
. * Schooling
. gen school = 0 if deh == 0
(10,175 missing values generated)

. replace school = 5 if deh == 1
(967 real changes made)

. replace school = 8 if deh == 2
(939 real changes made)

. replace school = 13 if deh == 3 | deh == 4
(5,341 real changes made)

. replace school = 18 if deh == 5
(2,928 real changes made)

. 
. *Experience
. gen exp = dag - school - 6

. replace exp=max(0,exp)
(573 real changes made)

. gen exp2 = exp^2

. 
. *Work history in years
. replace liwwh = 0 if liwwh == -1 // never worked or younger than 16
(0 real changes made)

. replace liwwh = liwwh / 12
variable liwwh was int now float
(9,045 real changes made)

. gen liwwh2 = liwwh^2

. 
. *Age
. gen dag2 = dag^2

. 
. 
. quiet generate ed_low =  inrange(deh,0,2)

. quiet generate ed_middle =  inrange(deh,3,4)

. quiet generate ed_high =  inrange(deh,5,6)

. 
. * adult 
. quiet generate isadult = 0

. quiet replace  isadult = 1 if dag >= $MIN_AGE & dag <=$MAX_AGE

. quiet bys idhh: egen nadult = sum(isadult)

. 
. *-------------------------------------------------------------------------------
. * Equivalence scale (square root of number of components)
. *-------------------------------------------------------------------------------
. bysort idhh: egen hhsize = count(idhh)

. gen eq_scale = sqrt(hhsize)

. gen oecd_equiv_scale = 1 + (nadult - 1 + nchild18p + nold)*0.5 + (nchild014)*0.3  

. // 1 head + 0.5 every 15+ + 0.3 below
. 
. //HH position - fiscal effects
. //couples households
. generate hhtype = . 
(11,356 missing values generated)

. replace  hhtype = 1 if flex_hh==1 // Couples 
(3,595 real changes made)

. replace  hhtype = 11 if flex_hh == 1 & numch >0 // Couple hh with children
(1,094 real changes made)

. replace  hhtype = 12 if flex_hh == 1 & numch ==0 //Couple hh without children
(2,501 real changes made)

. //single men households
. replace  hhtype = 2 if flex_hh == 2  // single women 
(1,563 real changes made)

. replace  hhtype = 21 if flex_hh == 2 & numch >0 // single women with children
(282 real changes made)

. replace  hhtype = 22 if flex_hh == 2 & numch ==0 // single women without children
(1,281 real changes made)

. //single women households
. replace  hhtype = 3 if flex_hh == 3  // single men 
(795 real changes made)

. replace  hhtype = 31 if flex_hh == 3 & numch >0 // single men with children
(45 real changes made)

. replace  hhtype = 32 if flex_hh == 3 & numch ==0 // single men without children
(750 real changes made)

. //sole parents 
. *replace  hhtype = 23 if (flex_hh == 3|flex_hh == 2) & numch >0 // sole parents with children
. 
. //Women with unflexible partner 
. replace  hhtype = 4 if flex_hh == 4  //Women with unflexible partner 
(1,079 real changes made)

. replace  hhtype = 41 if flex_hh == 4 & numch >0 // Women with unflexible partner  with childre
> n
(229 real changes made)

. replace  hhtype = 42 if flex_hh == 4 & numch ==0 // Women with unflexible partner  without chi
> ldren
(850 real changes made)

. 
. //Men with unflexible partner 
. replace  hhtype = 5 if flex_hh == 5  //Women with unflexible partner 
(1,019 real changes made)

. replace  hhtype = 51 if flex_hh == 5 & numch >0 // Women with unflexible partner  with childre
> n
(318 real changes made)

. replace  hhtype = 52 if flex_hh == 5 & numch ==0 // Women with unflexible partner  without chi
> ldren
(701 real changes made)

. replace  hhtype = 0 if flex_hh == 0
(3,305 real changes made)

. 
. assert hhtype != .

. 
. capture label drop poslbl

. label define poslbl                                     ///
>         1 "Couples"                                             /// 
>         11 "Couples with children"              ///
>         12 "Couples without children"       ///
>         2 "Single women"                                /// 
>         21 "Single women with children"     ///
>         22 "Single women without children"  ///
>         3 "Single men"                                          /// 
>         31 "Single men with children"       ///
>         32 "Single men without children"    ///
>         4 "Women with unflexible partner"                                       /// 
>         41 "Women with unflexible partner with children"       ///
>         42 "Women with unflexible partne without children"       ///
>         5 "Men with unflexible partner"                                         /// 
>         51 "Men with unflexible partner with children"       ///
>         52 "Men with unflexible partne without children"       ///
>         0 "Other" ///
>         

. label value hhtype poslbl

.         
. *-----------------------------------------------
. * Variables related to migrant status
. *-----------------------------------------------
. generate citiz = (dcz == 1)

. gen native = dcz ==1

. gen migrant = dcz !=1

. gen intra_eu = dcz ==2

. gen extra_eu = dcz ==3

. gen recent_migrant = (dyyrs < 6 & dyyrs > 0)

. gen reason_pt = pl120
(11,028 missing values generated)

. 
. * (Regional) Unemployment rate by sex   //[TO DO]! replace the info below with the regional un
> employment 
. * rate by sex of your country (add one row for each region, if info available)
. * Info from: http://appsso.eurostat.ec.europa.eu/nui/show.do?dataset=lfst_r_lfu3rt&lang=en
. 
. // Other Household income
. quiet generate  other_y         =    (y+pen+bun_all+capital)

. quiet bys idhh:  egen other_hh_y = sum(other_y)

. gen other_earn      =    (other_hh_y - y) / 1000

. gen eqoth_earn = other_earn / eq_scale

. *gen eqoth_inc = oth_inc / eq_scale
. *gen eqoth_earn_sq  = eqoth_earn * eqoth_earn
. *gen eqoth_inc_sq = eqoth_inc * eqoth_inc
. 
. //other variable for self-employed///
. 
. gen managers = (loc==1)

. gen technics = (loc>1&loc<5)

. gen service = (loc>4&loc<8)

. gen worker = loc>7 & loc <=9

. *gen whitecollar = lcl == 2
. gen civil= lcs==1

.         
. 
. foreach gender in 1 0{
  2.         forvalues emp=1/$EmplStatus{
  3.                 gen pre_level_`gender'_`emp'=   monthly_MW
  4.                 foreach q  in "25" "50" "75" "90" "95" "99" "100"{
  5. 
.                         gen level_`gender'_`emp'_`q'=.
  6. 
.                         if "`q'"!="100"{                
  7.                                 di in r "p(`q')"
  8. 
.                                 sum earns if LSind == 1 & dgn == `gender' & LSstatus == `emp' 
> & earns>monthly_MW, d
  9.                                 egen inc_level_`gender'_`emp'_`q'  = pctile(earns) ///
>                                 if LSind == 1 & dgn == `gender' & LSstatus == `emp' & (earns>m
> onthly_MW), p(`q')
 10. 
.                                 replace level_`gender'_`emp'_`q' = 1 if earns > pre_level_`gen
> der'_`emp' & earns <= inc_level_`gender'_`emp'_`q' & (LSind == 1 & dgn == `gender') & LSstatus
>  == `emp'   
 11.                                 
.                                 replace pre_level_`gender'_`emp' = inc_level_`gender'_`emp'_`q
> ' if LSind == 1 & dgn == `gender' & LSstatus == `emp' & (earns>monthly_MW)
 12.                 
.                                                         
.                         }
 13. 
.                         if "`q'"=="100"{
 14.                                 di in r "`q'"
 15.                                 replace level_`gender'_`emp'_`q' = 1 if earns > pre_level_`
> gender'_`emp' & (LSind == 1 & dgn == `gender') & (earns>monthly_MW) & LSstatus == `emp' 
 16.                         }
 17.                 }
 18.         }               
 19. }
(11,356 missing values generated)
p(25)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     561.1017       555.1775
 5%      586.355       555.3667
10%     630.6792       555.6308       Obs               1,371
25%     753.0858       556.0408       Sum of wgt.       1,371

50%     978.7967                      Mean           1202.232
                        Largest       Std. dev.      775.2576
75%     1332.983       5919.382
90%     1963.862       5919.839       Variance       601024.3
95%     2681.452       5922.011       Skewness       3.147794
99%     4969.796       5935.381       Kurtosis       16.01064
(9,985 missing values generated)
(343 real changes made)
(1,371 real changes made)
(11,356 missing values generated)
p(50)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     561.1017       555.1775
 5%      586.355       555.3667
10%     630.6792       555.6308       Obs               1,371
25%     753.0858       556.0408       Sum of wgt.       1,371

50%     978.7967                      Mean           1202.232
                        Largest       Std. dev.      775.2576
75%     1332.983       5919.382
90%     1963.862       5919.839       Variance       601024.3
95%     2681.452       5922.011       Skewness       3.147794
99%     4969.796       5935.381       Kurtosis       16.01064
(9,985 missing values generated)
(343 real changes made)
(1,371 real changes made)
(11,356 missing values generated)
p(75)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     561.1017       555.1775
 5%      586.355       555.3667
10%     630.6792       555.6308       Obs               1,371
25%     753.0858       556.0408       Sum of wgt.       1,371

50%     978.7967                      Mean           1202.232
                        Largest       Std. dev.      775.2576
75%     1332.983       5919.382
90%     1963.862       5919.839       Variance       601024.3
95%     2681.452       5922.011       Skewness       3.147794
99%     4969.796       5935.381       Kurtosis       16.01064
(9,985 missing values generated)
(343 real changes made)
(1,371 real changes made)
(11,356 missing values generated)
p(90)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     561.1017       555.1775
 5%      586.355       555.3667
10%     630.6792       555.6308       Obs               1,371
25%     753.0858       556.0408       Sum of wgt.       1,371

50%     978.7967                      Mean           1202.232
                        Largest       Std. dev.      775.2576
75%     1332.983       5919.382
90%     1963.862       5919.839       Variance       601024.3
95%     2681.452       5922.011       Skewness       3.147794
99%     4969.796       5935.381       Kurtosis       16.01064
(9,985 missing values generated)
(205 real changes made)
(1,371 real changes made)
(11,356 missing values generated)
p(95)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     561.1017       555.1775
 5%      586.355       555.3667
10%     630.6792       555.6308       Obs               1,371
25%     753.0858       556.0408       Sum of wgt.       1,371

50%     978.7967                      Mean           1202.232
                        Largest       Std. dev.      775.2576
75%     1332.983       5919.382
90%     1963.862       5919.839       Variance       601024.3
95%     2681.452       5922.011       Skewness       3.147794
99%     4969.796       5935.381       Kurtosis       16.01064
(9,985 missing values generated)
(69 real changes made)
(1,371 real changes made)
(11,356 missing values generated)
p(99)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     561.1017       555.1775
 5%      586.355       555.3667
10%     630.6792       555.6308       Obs               1,371
25%     753.0858       556.0408       Sum of wgt.       1,371

50%     978.7967                      Mean           1202.232
                        Largest       Std. dev.      775.2576
75%     1332.983       5919.382
90%     1963.862       5919.839       Variance       601024.3
95%     2681.452       5922.011       Skewness       3.147794
99%     4969.796       5935.381       Kurtosis       16.01064
(9,985 missing values generated)
(55 real changes made)
(1,371 real changes made)
(11,356 missing values generated)
100
(13 real changes made)
(11,356 missing values generated)
p(25)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     558.9817       555.1017
 5%       576.49       555.2275
10%     601.9933       555.4617       Obs               1,426
25%     699.2383       556.2692       Sum of wgt.       1,426

50%     888.4862                      Mean           1041.171
                        Largest       Std. dev.      544.8591
75%     1179.912         4147.6
90%     1600.793       5386.672       Variance       296871.5
95%     2012.113       5523.601       Skewness       3.038848
99%      3461.69       5538.165       Kurtosis        17.3259
(9,930 missing values generated)
(357 real changes made)
(1,426 real changes made)
(11,356 missing values generated)
p(50)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     558.9817       555.1017
 5%       576.49       555.2275
10%     601.9933       555.4617       Obs               1,426
25%     699.2383       556.2692       Sum of wgt.       1,426

50%     888.4862                      Mean           1041.171
                        Largest       Std. dev.      544.8591
75%     1179.912         4147.6
90%     1600.793       5386.672       Variance       296871.5
95%     2012.113       5523.601       Skewness       3.038848
99%      3461.69       5538.165       Kurtosis        17.3259
(9,930 missing values generated)
(356 real changes made)
(1,426 real changes made)
(11,356 missing values generated)
p(75)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     558.9817       555.1017
 5%       576.49       555.2275
10%     601.9933       555.4617       Obs               1,426
25%     699.2383       556.2692       Sum of wgt.       1,426

50%     888.4862                      Mean           1041.171
                        Largest       Std. dev.      544.8591
75%     1179.912         4147.6
90%     1600.793       5386.672       Variance       296871.5
95%     2012.113       5523.601       Skewness       3.038848
99%      3461.69       5538.165       Kurtosis        17.3259
(9,930 missing values generated)
(357 real changes made)
(1,426 real changes made)
(11,356 missing values generated)
p(90)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     558.9817       555.1017
 5%       576.49       555.2275
10%     601.9933       555.4617       Obs               1,426
25%     699.2383       556.2692       Sum of wgt.       1,426

50%     888.4862                      Mean           1041.171
                        Largest       Std. dev.      544.8591
75%     1179.912         4147.6
90%     1600.793       5386.672       Variance       296871.5
95%     2012.113       5523.601       Skewness       3.038848
99%      3461.69       5538.165       Kurtosis        17.3259
(9,930 missing values generated)
(214 real changes made)
(1,426 real changes made)
(11,356 missing values generated)
p(95)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     558.9817       555.1017
 5%       576.49       555.2275
10%     601.9933       555.4617       Obs               1,426
25%     699.2383       556.2692       Sum of wgt.       1,426

50%     888.4862                      Mean           1041.171
                        Largest       Std. dev.      544.8591
75%     1179.912         4147.6
90%     1600.793       5386.672       Variance       296871.5
95%     2012.113       5523.601       Skewness       3.038848
99%      3461.69       5538.165       Kurtosis        17.3259
(9,930 missing values generated)
(71 real changes made)
(1,426 real changes made)
(11,356 missing values generated)
p(99)

                            earns
-------------------------------------------------------------
      Percentiles      Smallest
 1%     558.9817       555.1017
 5%       576.49       555.2275
10%     601.9933       555.4617       Obs               1,426
25%     699.2383       556.2692       Sum of wgt.       1,426

50%     888.4862                      Mean           1041.171
                        Largest       Std. dev.      544.8591
75%     1179.912         4147.6
90%     1600.793       5386.672       Variance       296871.5
95%     2012.113       5523.601       Skewness       3.038848
99%      3461.69       5538.165       Kurtosis        17.3259
(9,930 missing values generated)
(57 real changes made)
(1,426 real changes made)
(11,356 missing values generated)
100
(14 real changes made)

. 
. foreach q  in "25" "50" "75" "90" "95" "99" "100"{
  2.         gen level_`q'= 0
  3.         foreach gender in 1 0{
  4.                 forvalues emp=1/$EmplStatus{
  5.                         replace level_`q'= level_`gender'_`emp'_`q' if (LSind == 1 & dgn ==
>  `gender') & LSstatus == `emp' & level_`gender'_`emp'_`q' == 1
  6.                         drop level_`gender'_`emp'_`q'
  7. 
.                 }
  8.                 
.         }               
  9. }
(343 real changes made)
(357 real changes made)
(343 real changes made)
(356 real changes made)
(343 real changes made)
(357 real changes made)
(205 real changes made)
(214 real changes made)
(69 real changes made)
(71 real changes made)
(55 real changes made)
(57 real changes made)
(13 real changes made)
(14 real changes made)

. 
. 
. quiet by idhh: egen wealth = sum(afc)

. quiet gen afc_per_k = wealth / (oecd_equiv_scale * 1000)

. 
. capture gen regunp = 0 

. do "${EM_dofiles}/unemployment.do" 

. *********************************************************************************
. * unemployment.do                                                                             
>                                                   *
. *                                                                                             
>                                                                   *
. * Last Update: 12/06/2019 E.N.                                                                
>                                   *                           
. *********************************************************************************
. if "${country}" == "it"{
.         replace regunp = 0.041 if drgn2 == 1 & dgn == 0
.         replace regunp = 0.041 if drgn2 == 2 & dgn == 0 // missing value, I use the same as fo
> r Piemonte
.         replace regunp = 0.041 if drgn2 == 3 & dgn == 0
.         replace regunp = 0.029 if drgn2 == 4 & dgn == 0
.         replace regunp = 0.041 if drgn2 == 5 & dgn == 0
.         replace regunp = 0.055 if drgn2 == 6 & dgn == 0
.         replace regunp = 0.041 if drgn2 == 7 & dgn == 0
.         replace regunp = 0.059 if drgn2 == 8 & dgn == 0
.         replace regunp = 0.037 if drgn2 == 9 & dgn == 0
.         replace regunp = 0.063 if drgn2 == 10 & dgn == 0
.         replace regunp = 0.070 if drgn2 == 11 & dgn == 0
.         replace regunp = 0.056 if drgn2 == 12 & dgn == 0
.         replace regunp = 0.084 if drgn2 == 13 & dgn == 0
.         replace regunp = 0.084 if drgn2 == 14 & dgn == 0
.         replace regunp = 0.129 if drgn2 == 15 & dgn == 0
.         replace regunp = 0.147 if drgn2 == 16 & dgn == 0
.         replace regunp = 0.148 if drgn2 == 17 & dgn == 0
.         replace regunp = 0.131 if drgn2 == 18 & dgn == 0
.         replace regunp = 0.134 if drgn2 == 19 & dgn == 0
.         replace regunp = 0.144 if drgn2 == 20 & dgn == 0
.         replace regunp = 0.123 if drgn2 == 21 & dgn == 0
. 
.         replace regunp = 0.025 if drgn2 == 1 & dgn == 1
.         replace regunp = 0.025 if drgn2 == 2 & dgn == 1 // missing value, I use the same as fo
> r Piemonte
.         replace regunp = 0.022 if drgn2 == 3 & dgn == 1
.         replace regunp = 0.014 if drgn2 == 4 & dgn == 1
.         replace regunp = 0.014 if drgn2 == 5 & dgn == 1
.         replace regunp = 0.018 if drgn2 == 6 & dgn == 1
.         replace regunp = 0.021 if drgn2 == 7 & dgn == 1
.         replace regunp = 0.026 if drgn2 == 8 & dgn == 1
.         replace regunp = 0.022 if drgn2 == 9 & dgn == 1
.         replace regunp = 0.024 if drgn2 == 10 & dgn == 1
.         replace regunp = 0.022 if drgn2 == 11 & dgn == 1
.         replace regunp = 0.027 if drgn2 == 12 & dgn == 1
.         replace regunp = 0.046 if drgn2 == 13 & dgn == 1
.         replace regunp = 0.034 if drgn2 == 14 & dgn == 1
.         replace regunp = 0.057 if drgn2 == 15 & dgn == 1
.         replace regunp = 0.082 if drgn2 == 16 & dgn == 1
.         replace regunp = 0.082 if drgn2 == 17 & dgn == 1
.         replace regunp = 0.061 if drgn2 == 18 & dgn == 1
.         replace regunp = 0.093 if drgn2 == 19 & dgn == 1
.         replace regunp = 0.087 if drgn2 == 20 & dgn == 1
.         replace regunp = 0.068 if drgn2 == 21 & dgn == 1
. }

. 
. if "${country}" == "es"{
.         replace regunp  =       32.14   if      drgn2 ==        61      &dgn==0
.         replace regunp  =       17.84   if      drgn2 ==        24      &dgn==0
.         replace regunp  =       16.32   if      drgn2 ==        12      &dgn==0
.         replace regunp  =       14.43   if      drgn2 ==        53      &dgn==0
.         replace regunp  =       28.00   if      drgn2 ==        70      &dgn==0
.         replace regunp  =       15.51   if      drgn2 ==        13      &dgn==0
.         replace regunp  =       17.90   if      drgn2 ==        41      &dgn==0
.         replace regunp  =       28.22   if      drgn2 ==        42      &dgn==0
.         replace regunp  =       16.93   if      drgn2 ==        51      &dgn==0
.         replace regunp  =       22.58   if      drgn2 ==        52      &dgn==0
.         replace regunp  =       32.39   if      drgn2 ==        43      &dgn==0
.         replace regunp  =       17.82   if      drgn2 ==        11      &dgn==0
.         replace regunp  =       16.47   if      drgn2 ==        30      &dgn==0
.         replace regunp  =       23.00   if      drgn2 ==        62      &dgn==0
.         replace regunp  =       14.26   if      drgn2 ==        22      &dgn==0
.         replace regunp  =       13.15   if      drgn2 ==        21      &dgn==0
.         replace regunp  =       15.15   if      drgn2 ==        23      &dgn==0
.         replace regunp  =       31.95   if      drgn2 ==        63      &dgn==0
.         replace regunp  =       37.66   if      drgn2 ==        64      &dgn==0
. 
.                 
.         replace regunp  =       26.20   if      drgn2 ==        61      &dgn==1
.         replace regunp  =       12.11   if      drgn2 ==        24      &dgn==1
.         replace regunp  =       18.83   if      drgn2 ==        12      &dgn==1
.         replace regunp  =       13.43   if      drgn2 ==        53      &dgn==1
.         replace regunp  =       24.38   if      drgn2 ==        70      &dgn==1
.         replace regunp  =       14.35   if      drgn2 ==        13      &dgn==1
.         replace regunp  =       14.12   if      drgn2 ==        41      &dgn==1
.         replace regunp  =       19.96   if      drgn2 ==        42      &dgn==1
.         replace regunp  =       14.61   if      drgn2 ==        51      &dgn==1
.         replace regunp  =       18.91   if      drgn2 ==        52      &dgn==1
.         replace regunp  =       23.74   if      drgn2 ==        43      &dgn==1
.         replace regunp  =       16.54   if      drgn2 ==        11      &dgn==1
.         replace regunp  =       15.01   if      drgn2 ==        30      &dgn==1
.         replace regunp  =       17.31   if      drgn2 ==        62      &dgn==1
.         replace regunp  =       10.92   if      drgn2 ==        22      &dgn==1
.         replace regunp  =       12.10   if      drgn2 ==        21      &dgn==1
.         replace regunp  =       12.19   if      drgn2 ==        23      &dgn==1
.         replace regunp  =       20.15   if      drgn2 ==        63      &dgn==1
.         replace regunp  =       26.12   if      drgn2 ==        64      &dgn==1
. 
.         
. }

. 
. if "${country}" == "el"{
.         replace regunp  =       15.9    if drgn2 ==     11
.         replace regunp  =       20.7    if drgn2 ==     12
.         replace regunp  =       27              if drgn2 ==     13
.         replace regunp  =       20.1    if drgn2 ==     14
.         replace regunp  =       18.3    if drgn2 ==     21
.         replace regunp  =       15.9    if drgn2 ==     22
.         replace regunp  =       24.1    if drgn2 ==     23
.         replace regunp  =       18.9    if drgn2 ==     24
.         replace regunp  =       14.4    if drgn2 ==     25
.         replace regunp  =       19.9    if drgn2 ==     30
.         replace regunp  =       22.3    if drgn2 ==     41
.         replace regunp  =       16.9    if drgn2 ==     42
.         replace regunp  =       13.4    if drgn2 ==     43
. }

. 
end of do-file

. capture gen reg = 0

. *do "${EM_dofiles}/capital.do" 
. 
. gen mdt = round((ddt - $pyear )/10000)

. // Covariates 
. *global wagex   "age age2 ed_middle ed_high married other_hh_y afc_per_k citiz" // reg
. 
. *qui log using $outlog/heckman/wage_estim_$country.log , replace text name(wage_estim)
. gen mortgage = log(xhcmomi+0.00000001)

. 
. 
. local levels = "level_50 level_75 level_90 level_95 level_99 level_100" 

. global wagex   "age age2 ed_middle ed_high migrant regunp managers technics service worker civ
> il `levels'  lfs" // reg

. global selectx "ed_middle ed_high liwwh regunp numch3 numch36 numch6p couple mortgage eqoth_ea
> rn afc_per_k"

. 
. label var age "Age"

. label var age2 "Age square"

. label var ed_middle "Secondary education"

. label var ed_high "Tertiary education"

. label var migrant "Migrant"

. label var liwwh "total Months in Employment"

. label var  regunp "regional unemployment"

. label var  numch3 "Number of children < 3 years"

. label var  numch36 "Number of children [3-6] years"

. label var  numch6p "Number of children > 6 years"

. label var  couple "Couple"

. label var  mortgage "Holding a Mortage"

. 
. svyset [pweight=dwt]

Sampling weights: dwt
             VCE: linearized
     Single unit: missing
        Strata 1: <one>
 Sampling unit 1: <observations>
           FPC 1: <zero>

.         
. //WAGE PREDICTION WITH SECTORS DISTINCTION
. local x = $NumberOfSectors 

. local y = $EmplStatus

. 
. forvalues sec=1/$NumberOfSectors{
  2.         forvalues emp=1/$EmplStatus{
  3.                 gen depvar_m_`emp'_`sec' = 1 if  LSstatus == `emp' & sector == `sec'
  4.                 local k=(`sec'-1)*`y'+`emp'
  5.                 qui rename depvar_m_`emp'_`sec' depvar_m`k'
  6.         }
  7. }
(7,027 missing values generated)

. 
. gen depvar_m = 0

. local x_y= $NumberOfSectors*$EmplStatus 

. forvalues i=1/`x_y'{
  2.         replace depvar_m = `i' if depvar_m`i' == 1 
  3.         gen p_hourly_`i' = .
  4.         gen depvar_`i' = lnhourlywage if depvar_m ==`i' 
  5. }
(4,329 real changes made)
(11,356 missing values generated)
(7,027 missing values generated)

. 
. tab depvar_m

   depvar_m |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      7,027       61.88       61.88
          1 |      4,329       38.12      100.00
------------+-----------------------------------
      Total |     11,356      100.00

. 
.                 
. foreach gender in 0 1 {
  2. 
. //Wage_prediction = 1 is the Dagsvik Strom method, 2004
. //Dagsvik JK, Str0m S. 2004. Sectoral labor supply, choice restrictions and functional form. D
> iscussion papers, no. 388, Statistics Norway. http://www.ssb.no/publikasjoner/DP/pdf/dp388.pdf
. 
.         if ${WAGE_PREDICTION} == 1{     
  3.                 di in r "gender is equal to `gender'"           
  4.                 forvalues i=1/`x_y'{
  5.                         di in r `i' 
  6.                         mlogit depvar_m $selectx if LSind == 1 & dgn == `gender', baseoutco
> me(0)
  7.                         predict p`i' if e(sample), outcome(`i')
  8.                         gen neglnprob`i' = ln(p`i')* -1
  9.                         gen  pneglnprob`i' = p`i'*neglnprob`i'
 10.                         reg lnhourlywage $wagex pneglnprob`i' if LSind == 1 & dgn == `gende
> r' & depvar_m==`i'
 11.                         predict wage`i',xb
 12.                         *replace wage`i' = wage`i'  - _b[pneglnprob`i']*pneglnprob`i'
.                         gen estimvar`i' = lnhourlywage - wage`i' if LSind == 1 & dgn == `gende
> r'
 13.                         sum estimvar`i' if LSind == 1 & dgn == `gender'
 14.                         *gen variance`i' = r(Var)
.                         scalar m`i'=r(Var)
 15.                         matrix s`i'=m`i'
 16.                         drawnorm es_`i',mean(0) sd(s`i')
 17.                         replace p_hourly_`i' = exp(wage`i'+es_`i') if dgn == `gender'& LSin
> d==1
 18.                         sum p_hourly_`i'  hourly_wage if dgn == `gender'& LSind==1
 19.                         drop p`i' neglnprob* pneglnprob* wage`i' estimvar`i' es_`i'
 20.                 }
 21.         }
 22.                 
. 
. ///wage prediction = 2 - regards to dmf(2) method
>         if ${WAGE_PREDICTION} == 2 {    
 23. 
.                 forvalues i=1/`x_y'{
 24.                         di in r "`i'"
 25.                         selmlog depvar_`i'  $wagex if LSind == 1 & dgn == `gender', select(
> depvar_m = $selectx)/*
>                         */dmf(2)  gen(_s)
 26.                 
.                         forvalues s = 0(1)`x_y' {
 27.                                 capture gen _m`s' = _s`s'
 28.                         }
 29.                 
.                         predict wage_`i' if dgn == `gender' & LSind==1,xb 
 30.                         replace p_hourly_`i' = exp(wage_`i') if dgn == `gender'& LSind==1
 31.                         sum p_hourly_`i' hourly_wage if hourly_wage >0 & LSind == 1 & dgn =
> = `gender'
 32.                         capture drop _m* _s* wage_`i'
 33.                 }
 34.         }
 35. 
. 
. 
. ///wage prediction = 3 - regards to Durbin Mcfadden method
>         if ${WAGE_PREDICTION} == 3 {    
 36. 
.                 /*gen trnsp0=(p0*ln(p0))/(1-p0);
>                 > gen trnsp1=(p1*ln(p1))/(1-p1);
>                 > gen trnsp2=(p2*ln(p2))/(1-p2);
>                 > gen trnsp3=(p3*ln(p3))/(1-p3);
>                 > 
>                 > gen millsp1=3*ln(p1)+ trnsp0 +trnsp2 +trnsp3;
>                 > gen millsp2=3*ln(p2)+ trnsp0 +trnsp1 +trnsp3;
>                 > gen millsp3=3*ln(p3)+ trnsp0 +trnsp1 +trnsp2;*/
.                 forvalues i=1/`x_y'{
 37.                                 di in r "`i'"
 38.                                 selmlog depvar_`i'  $wagex if LSind == 1 & dgn == `gender',
>  select(depvar_m = $selectx)/*
>                                 */dmf(0)  wls gen(_s)
 39.                                 /*      [lee dmf(#) dhl(# [all]) showmlogit wls
>                                            bootstrap(number_of_replications [sample_size]) mlo
> ptions(mlogit
>                                            options) gen(variable generic name)]*/
.                                 *estimates store wage_`gender'_`i'_${country}_${year}
.                                 *estwrite wage_`gender'_`i'_${country}_${year} using "${path_r
> esults}/estimation/wage_`gender'_`i'_${country}_${year}.sters", replace
.                                 
.                                 forvalues s = 0(1)`x_y' {
 40.                                         capture gen _m`s' = _s`s'
 41.                                 }
 42.                         
.                                 predict wage_`i' if dgn == `gender' & LSind==1,xb 
 43.                                 replace p_hourly_`i' = exp(wage_`i') if dgn == `gender'& LS
> ind==1
 44.                                 sum p_hourly_`i' hourly_wage if LSind == 1 & dgn == `gender
> ' & depvar_m == `i'
 45.                                 capture drop _m* _s* wage_`i'
 46.                 }
 47.         }
 48. 
. }
1


Selectivity correction based on multinomial logit
Second step regression
(Beware: standard errors below do not take account of the two-step procedure)


Beware: for 96 observations, the computed heteroskedastic residual variance is negative.
(sum of wgt is 7,376.18798819085)

      Source |       SS           df       MS      Number of obs   =     2,182
-------------+----------------------------------   F(17, 2164)     =    203.63
       Model |   528.31317        17  31.0772453   Prob > F        =    0.0000
    Residual |  330.254919     2,164  .152613179   R-squared       =    0.6153
-------------+----------------------------------   Adj R-squared   =    0.6123
       Total |  858.568089     2,181  .393657996   Root MSE        =    .39066

------------------------------------------------------------------------------
    depvar_1 | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0146378   .0056599     2.59   0.010     .0035385    .0257372
        age2 |  -.0002004   .0000638    -3.14   0.002    -.0003255   -.0000753
   ed_middle |  -.2435653   .0522933    -4.66   0.000    -.3461156    -.141015
     ed_high |  -.3659015   .0605463    -6.04   0.000    -.4846364   -.2471665
     migrant |   .0254101   .1246522     0.20   0.838    -.2190405    .2698607
      regunp |          0  (omitted)
    managers |          0  (omitted)
    technics |  -.0064483    .040245    -0.16   0.873    -.0853711    .0724745
     service |   .0385173   .0448377     0.86   0.390    -.0494121    .1264468
      worker |   -.000857   .0466557    -0.02   0.985    -.0923516    .0906377
       civil |   .1164945   .0282796     4.12   0.000     .0610365    .1719525
    level_50 |   .5604084    .025034    22.39   0.000     .5113152    .6095017
    level_75 |   .7794531   .0288446    27.02   0.000     .7228871    .8360192
    level_90 |    1.04621   .0366162    28.57   0.000      .974403    1.118016
    level_95 |   1.282099   .0585296    21.91   0.000     1.167319    1.396879
    level_99 |   1.616224   .0655076    24.67   0.000      1.48776    1.744688
   level_100 |   1.882045   .1236188    15.22   0.000     1.639621    2.124469
         lfs |   .0020111   .0005059     3.98   0.000      .001019    .0030033
         _m0 |   .5605858   .0689889     8.13   0.000     .4252943    .6958772
       _cons |   1.128886   .1721342     6.56   0.000     .7913204    1.466452
------------------------------------------------------------------------------
------------------------------------------------------------------------------
             | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
Anciliary    |
      Sigma2 |   .3818703          .        .       .            .           .
        rho0 |   1.163479          .        .       .            .           .
------------------------------------------------------------------------------
(8,775 missing values generated)
(2,581 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
  p_hourly_1 |      2,278    4.449608    2.686756   1.330415   18.35875
 hourly_wage |      2,278     4.59642    2.848685   .4038099   17.12956
1


Selectivity correction based on multinomial logit
Second step regression
(Beware: standard errors below do not take account of the two-step procedure)


(sum of wgt is 5,483.72105815457)

      Source |       SS           df       MS      Number of obs   =     1,849
-------------+----------------------------------   F(18, 1830)     =    270.58
       Model |  562.226485        18  31.2348047   Prob > F        =    0.0000
    Residual |  211.248539     1,830   .11543636   R-squared       =    0.7269
-------------+----------------------------------   Adj R-squared   =    0.7242
       Total |  773.475025     1,848  .418547091   Root MSE        =    .33976

------------------------------------------------------------------------------
    depvar_1 | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0037237   .0058537     0.64   0.525     -.007757    .0152044
        age2 |  -.0000656   .0000641    -1.02   0.307    -.0001913    .0000602
   ed_middle |   .0271158    .039775     0.68   0.495    -.0508934     .105125
     ed_high |   .0027132    .047331     0.06   0.954    -.0901152    .0955416
     migrant |   .0336038   .0918126     0.37   0.714    -.1464648    .2136723
      regunp |          0  (omitted)
    managers |   -.093834   .1258708    -0.75   0.456    -.3406996    .1530315
    technics |  -.1113903   .1250009    -0.89   0.373    -.3565498    .1337691
     service |  -.1107132   .1246807    -0.89   0.375    -.3552447    .1338183
      worker |  -.1560378     .12562    -1.24   0.214    -.4024114    .0903358
       civil |  -.0482888    .029042    -1.66   0.097    -.1052477      .00867
    level_50 |   .5604976    .022798    24.59   0.000     .5157847    .6052105
    level_75 |   .8216359   .0235569    34.88   0.000     .7754348    .8678371
    level_90 |   1.117863   .0291254    38.38   0.000     1.060741    1.174986
    level_95 |    1.45221    .045402    31.99   0.000     1.363165    1.541256
    level_99 |   1.780582   .0505329    35.24   0.000     1.681474     1.87969
   level_100 |   2.044652   .0990828    20.64   0.000     1.850324    2.238979
         lfs |   .0024046   .0004801     5.01   0.000      .001463    .0033461
         _m0 |   .1389494   .0426763     3.26   0.001       .05525    .2226488
       _cons |   1.059484   .1917801     5.52   0.000     .6833533    1.435615
------------------------------------------------------------------------------
------------------------------------------------------------------------------
             | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
Anciliary    |
      Sigma2 |   .1251988          .        .       .            .           .
        rho0 |   .5036523          .        .       .            .           .
------------------------------------------------------------------------------
(9,196 missing values generated)
(2,160 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
  p_hourly_1 |      1,849    5.310116    3.529588   2.038801   23.59995
 hourly_wage |      1,849    5.475543     3.75684   .4319515    23.1565

. 
.                 
. forvalues sec=1/$NumberOfSectors {
  2.         forvalues emp=1/$EmplStatus{
  3.                 local k=(`sec'-1)*`y'+`emp'
  4.                 qui rename p_hourly_`k' p_hourly_`emp'_`sec' 
  5.         }  
  6. }

. 
. if ${ACTUAL_WAGE} == 1 {
.         local x = $NumberOfSectors 
.         local y = $EmplStatus
.         forvalues sec=1/`x' {
  2.                 forvalues emp=1/`y' {
  3.                         
.                 replace p_hourly_`emp'_`sec' = hourly_wage if sector == `sec' & LSstatus == `e
> mp' & hourly_wage !=. & flex ==1
  4.                 sum     hourly_wage p_hourly_`emp'_`sec' if sector == `sec' & LSstatus == `
> emp' & hourly_wage !=. & flex ==1
  5.                 gen yem_`emp'_`sec' = p_hourly_`emp'_`sec'*adjusted_hours*4.333
  6.                 }  
  7.         }
(3,740 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
 hourly_wage |      3,740     5.11636    3.390706   .4038099    23.1565
p_hourly_1_1 |      3,740     5.11636    3.390706   .4038099    23.1565
(6,615 missing values generated)
. }

. 
. 
. local x = $NumberOfSectors 

. local y = $EmplStatus

. gen bad_predict = 0

. forvalues sec=1/`x' {
  2.         forvalues emp=1/`y' {
  3.                 
.                 gen p_monthly_`emp'_`sec' = p_hourly_`emp'_`sec'*adjusted_hours*4.333 if flex 
> ==1 
  4.                 gen dif_`emp'_`sec' =  p_monthly_`emp'_`sec' - earns
  5.                 sum dif_`emp'_`sec' if sector == `sec' & LSstatus == `emp' & flex == 1, d
  6.                 replace bad_predict = 1 if dif_`emp'_`sec' < r(p10)
  7.                 
.         }  
  8. }
(7,108 missing values generated)
(7,108 missing values generated)

                           dif_1_1
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -103.1104      -2569.269
 5%            0      -2554.705
10%            0      -2423.581       Obs               3,740
25%            0      -2417.776       Sum of wgt.       3,740

50%            0                      Mean          -9.745417
                        Largest       Std. dev.      124.8898
75%     1.14e-13       66.53917
90%     2.27e-13       67.88833       Variance       15597.46
95%     2.27e-13       69.10167       Skewness       -15.3682
99%     4.55e-13       81.66562       Kurtosis       261.5204
(186 real changes made)

. 
. drop dgn

. gen dgn =1 if dgn_m ==1
(6,297 missing values generated)

. replace dgn =0  if dgn_f ==1
(6,297 real changes made)

. 
. gen MW_earner = hourly_wage < hourly_MW & employee==1

. 
. 
. *| (p_hourly_1_1 < hourly_MW)
. quiet compress

. sort idperson

. 
. gen les_origin = les

. 
. capture drop MEpartner agepartner penpartner youngagech10p youngagech610 youngagech6 youngagec
> h6p youngagech36 youngagech3 youngagech hw_actual

. 
. //observed choice of hours      
. gen lhw_choice = adjusted_hours 
(5 missing values generated)

. replace lhw_choice = $max_hour  if lhw_choice>$max_hour
(201 real changes made)

. replace lhw_choice = $min_hour+1 if (lhw_choice <= $min_hour & lhw_choice > 0) & flex ==1 
(5 real changes made)

. 
. *gen double choice = int((lhw_choice + $step - $initial_step )/($step ))+1 if flex ==1
. gen double choice_g = $step * int((lhw_choice + $step - $min_hour -1)/ $step ) + $min_hour if 
> lhw_choice!=0 & flex ==1
(7,616 missing values generated)

. *replace choice_g = 0 if choice ==1 & flex ==1
. replace choice_g = 0 if flex ==1 & LSstatus==0|LSstatus >2
(635 real changes made)

. replace choice_g = $max_hour if flex ==1 & choice_g > $max_hour
(0 real changes made)

. 
. //observed choice of sector 
. gen sec_g = 0

. local x = $NumberOfSectors 

. forvalues sec=1/`x' {
  2.         replace sec_g  = sector if (sector == `sec')
  3. }
(6,369 real changes made)

. 
. //observed choice of sector 
. gen emp_status_g = 0

. local y = $EmplStatus

. forvalues emp=1/`y' {
  2.         replace emp_status_g  = LSstatus if (LSstatus == `emp')
  3. }  
(4,329 real changes made)

. 
. 
. if ${UNEMPLOYMENT} == 1{
.         replace choice_g = $search_hour if flex ==1 & unemployed ==1
.         replace emp_status_g = 0 if choice_g < $min_hour
.         replace sec_g = 0 if choice_g < $min_hour+1
. }

. else if ${UNEMPLOYMENT} == 0{
.         replace emp_status_g = 0 if choice_g == 0
(0 real changes made)
.         replace sec_g = 0 if choice_g ==0
(346 real changes made)
. }

. else{
.         di in r "ERROR: Unemployment can only be 0 or 1. Please modify the value and run again
> ."
. }

. 
. *replace sec_g = 0 if LSstatus ==1|LSstatus ==2
. assert sec_g >0 & emp_status_g > 0 if choice_g > 5 & flex ==1

. assert sec_g ==0 & emp_status_g == 0 if choice_g <= 5 & flex ==1

. 
. 
. gen dummy = . 
(11,356 missing values generated)

. 
. if $HOURS_DISTRIBUTION == 2 {
.         foreach c in $hours { 
  2.                 gen numero`c' = round(uniform()*1000) if flex == 1
  3.         }
(7,108 missing values generated)
(7,108 missing values generated)
(7,108 missing values generated)
(7,108 missing values generated)
. 
.         **** UOMINI E DONNE DIVISO E SOLO SU LSind == 1 (aggiunto nel replace e nella generazi
> one del numero'c')
. 
.         local j = $min_hour
.         local f = `j'
.         local k = `j' + $step
.         foreach c in $pos_hours{ 
  2.                 gen ore_m`c' = .
  3.                 gen ore_f`c' = .
  4.                 forvalues i = `j'/`k' { 
  5.                         quietly count if (lhw_choice>=`j' & lhw_choice<=`i') & choice_g == 
> `c' & flex == 1 & dgn == 1
  6.                         quietly replace dummy =(lhw_choice>=`j' & lhw_choice<=`i') & choice
> _g == `c' & flex == 1 & dgn == 1
  7.                         quietly sum dummy if (lhw_choice>=`f' & lhw_choice <=`k') & choice_
> g == `c' & flex == 1 & dgn == 1 [aw=dwt] 
  8.                         quietly replace ore_m`c' = `i' if(numero`c'<=r(mean)*1000) & r(mean
> )*1000 > 0 & ore_m`c' == . & flex == 1 & dgn==1
  9.                         quietly replace dummy =(lhw_choice>=`j' & lhw_choice<=`i') & choice
> _g == `c' & flex == 1 & dgn == 0
 10.                         quietly sum dummy if (lhw_choice >=`f' & lhw_choice <=`k') & choice
> _g == `c' & flex == 1 & dgn == 0 [aw=dwt] 
 11.                         quietly replace ore_f`c' = `i' if(numero`c'<=r(mean)*1000) & r(mean
> )*1000 > 0 & ore_f`c' == . & flex == 1 & dgn==0
 12.                 }
 13.         
.                 local j = `j' + $step
 14.                 local k = `j' + $step
 15.                 local f = `j'
 16.                 quietly sum ore_f`c' if flex_f ==1
 17.                 quietly sum ore_m`c' if flex_m ==1
 18.                 quietly replace ore_f`c' = $max_hour if ore_f`c'>$max_hour & ore_f`c' == .
 19.                 quietly replace ore_m`c' = $max_hour if ore_m`c'>$max_hour & ore_m`c' == .
 20.         }
(11,356 missing values generated)
(11,356 missing values generated)
(11,356 missing values generated)
(11,356 missing values generated)
(11,356 missing values generated)
(11,356 missing values generated)
. }

. 
. 
. gen ore_m0 = 0

. gen ore_f0 = 0

. 
. if ${UNEMPLOYMENT} == 1{
.         gen ore_m$search_hour = round(runiform(1,$search_hour)) if flex_m == 1
.         gen ore_f$search_hour = round(runiform(1,$search_hour)) if flex_f == 1
. }

. 
. 
. *drop rb* pb*  py* hy*
. drop numero* 

. *drop xmp_neg-y
. 
. //for testing reasons we keep 30% of the sample for each houshold type
. if ${TEST} == 1{
. gen test = 0
.         foreach i in "0" "1" "2" "3" "4" "5"{
  2.                 splitsample if flex_hh == `i' & n==1, generate(svar_`i',replace) split(30 7
> 0)
  3.                 replace  svar_`i' = 0 if  svar_`i' == 2 
  4.                 bysort idhh: egen  svar_`i'_tot = total( svar_`i')
  5.                 replace test = test + svar_`i'_tot
  6.         } 
. keep if test == 1
. }

. 
. 
. 
. 
. ******* SUMMARY STATISTICS OF LS FLEXIBLE SAMPLE *********************
. gen gender_couple = 1 if (dgn ==1 & couple==1) ==1
(8,521 missing values generated)

. replace gender_couple = 2 if (dgn ==0 & couple==1) ==1
(2,835 real changes made)

. replace gender_couple = 3 if (dgn ==1 & couple==0) ==1
(2,224 real changes made)

. replace gender_couple = 4 if (dgn ==0 & couple==0) ==1
(3,462 real changes made)

. 
. label define dgn_couple 1 "Married Men" 2 "Married Women" 3 "Single Men" 4 "Single Women"     
>   

. label value gender_couple dgn_couple

. 
. label var LSstatus "Labour Market Status"

. 
. asdoc tabulate LSstatus gender_couple if flex ==1 [aw=dwt], center col replace label title(\fs
> 28 Table 1. Distribution of LS endogenous sample by employment status, gender and marital stat
> us) save(${path_results2share}/${country}_${year}_${choices}ch/1-Summary_statistics.rtf)

+-------------------+
| Key               |
|-------------------|
|     frequency     |
| column percentage |
+-------------------+

      Labour |
      Market |                gender_couple
      Status | Married M  Married W  Single Me  Single Wo |     Total
-------------+--------------------------------------------+----------
    employee | 1,312.301 1,268.0816  473.43526   660.3806 | 3,714.198 
             |     91.38      88.95      74.25      88.21 |     87.43 
-------------+--------------------------------------------+----------
    inactive | 27.698389  71.846694  58.444972 31.1627894 | 189.15285 
             |      1.93       5.04       9.17       4.16 |      4.45 
-------------+--------------------------------------------+----------
  unemployed | 96.122426  85.671544  105.71232    57.1424 | 344.64869 
             |      6.69       6.01      16.58       7.63 |      8.11 
-------------+--------------------------------------------+----------
       Total | 1,436.122    1,425.6  637.59256  748.68579 |     4,248 
             |    100.00     100.00     100.00     100.00 |    100.00 
Click to Open File:  ../results//lt_2019_3ch/1-Summary_statistics.rtf

. 
. gen occ_ls = 1 if LSstatus == 1 & sec_g ==1
(7,027 missing values generated)

. replace occ_ls = 2 if LSstatus == 1 & sec_g ==2
(0 real changes made)

. replace occ_ls = 3 if LSstatus == 2 & sec_g ==1
(369 real changes made)

. replace occ_ls = 4 if LSstatus == 2 & sec_g ==2
(0 real changes made)

. label define oc_ls 1 "Employee in non-essential sector" 2 "Selfemployed in non-essential secto
> r" 3 "Employee in essential sector" 4 "Selfemployed in essential sector"  

. label value occ_ls oc_ls

. 
. asdoc tabulate occ_ls gender_couple if flex ==1 [aw=dwt], center col label title(\fs28 Table 2
> . Distribution of LS endogenous sample by employment status, occupational sector, gender and m
> arital status) save(${path_results2share}/${country}_${year}_${choices}ch/1-Summary_statistics
> .rtf) append

+-------------------+
| Key               |
|-------------------|
|     frequency     |
| column percentage |
+-------------------+

                      |                gender_couple
               occ_ls | Married M  Married W  Single Me  Single Wo |     Total
----------------------+--------------------------------------------+----------
Employee in non-essen |1,321.4172  1,276.891  476.72409  664.96809 |     3,740 
                      |    100.00     100.00     100.00     100.00 |    100.00 
----------------------+--------------------------------------------+----------
                Total |1,321.4172  1,276.891  476.72409  664.96809 |     3,740 
                      |    100.00     100.00     100.00     100.00 |    100.00 
Click to Open File:  ../results//lt_2019_3ch/1-Summary_statistics.rtf

. 
. 
. di in r "here is the new table"
here is the new table

. asdoc by gender_couple: sum hours  if flex ==1 & hours>0, center col label title(\fs28 Table 3
> . Average working hours of LS endogenous sample by employment status, occupational sector, gen
> der and marital status) save(${path_results2share}/${country}_${year}_${choices}ch/1-Summary_s
> tatistics.rtf) append 
gender_cou~e

Summary for variables: hours
Group variable: gender_couple 

gender_couple |         N      Mean        SD       Min       Max
--------------+--------------------------------------------------
  Married Men |      1354  41.64328   7.68344         8       128
Married Women |      1381  39.59667  7.312008         3        80
   Single Men |       316  40.42405  7.525444         5        80
 Single Women |       688  39.90698  6.618096         6        80
--------------+--------------------------------------------------
        Total |      3739  40.46483  7.400529         3       128
-----------------------------------------------------------------
  7.683
  7.312
  7.525
  6.618
Click to Open File:  ../results//lt_2019_3ch/1-Summary_statistics.rtf

. 
. 
. gen mig_categ = 1 if migrant_EU==1
(11,347 missing values generated)

. replace mig_categ = 2 if migrant_nonEU==1
(51 real changes made)

. replace mig_categ = 3 if bornEU_ctz==1
(41 real changes made)

. replace mig_categ = 4 if bornnonEU_ctz==1
(562 real changes made)

. label define mig 1 "EU migrant" 2 "Non-EU migrant" 3 "Born in EU but citizen" 4 "Born out EU b
> ut citizen"       

. label value mig_categ mig

. asdoc tabulate mig_categ if flex ==1 , center label title(\fs28 Table 4. Distribution of Migra
> nts by country of birth and citizenship) save(${path_results2share}/${country}_${year}_${choic
> es}ch/1-Summary_statistics.rtf) append

              mig_categ |      Freq.     Percent        Cum.
------------------------+-----------------------------------
             EU migrant |          1        0.41        0.41
         Non-EU migrant |         25       10.37       10.79
 Born in EU but citizen |         16        6.64       17.43
Born out EU but citizen |        199       82.57      100.00
------------------------+-----------------------------------
                  Total |        241      100.00
Click to Open File:  ../results//lt_2019_3ch/1-Summary_statistics.rtf

. 
. 
. sort idhh idperson

. format idperson %12.0f 

. 
. local allvars  $allvars strata1 psu1

. 
. format idperson %12.0f 

. outsheet `allvars' using ///
>     "${path_LSscen}/0_fullsample/${country}_${year}_${choices}ch_full.txt", replace 

. 
. 
. save "${path_LS}/baseline/${country}_${year}_${choices}ch_baseline_full.dta", replace
file ../data//baseline/lt_2019_3ch_baseline_full.dta saved

. 
. capture keep `allvars' employee selfemployed age age2 school exp exp2 liwwh2 dag2 edprim edlse
> c edhsec edtert edlsec2 edhsec2 edtert2 solo_self unemployed inactive emp_income selfemp_incom
> e earns earnstype couple old70 pold ed_low ed_middle ed_high flex* hours LSstatus totmonthsFTP
> T hourly_wage married sector sec_g hhsize eq_scale oecd_equiv_scale hhpos citiz  mdt mortgage 
> *choice* numch* emp_status_g LSstatus bunctmy cob bornEU_ctz bornnonEU_ctz migrant_EU migrant_
> nonEU dyyrs native migrant intra_eu extra_eu recent_migrant mig_categ hc030 hc040

. 
. save "${path_LS}/baseline/${country}_${year}_${choices}ch_reduced_baseline.dta", replace
file ../data//baseline/lt_2019_3ch_reduced_baseline.dta saved

. 
. 
. do 11_programs

. *********************************************************************************
. * 11_programs.do                                                                              
>                   *  
. *                                                                                             
>                                                                   *
. * Includes the programs that will be used later                                               
>                   *
. * Date: 29 June 2018                                                                          
>                                           *
. * Updated: June 2021                                                                          
>                                           *                             
. *                                                                                             
>                                                                   *
. * Content:                                                                                    
>                                                           *
. * 1. writePolicyDatasetSystem                                                                 
>                                   *
. * 2. writePolicyDatasetData                                                                   
>                                           *
. * 3. writePolicyDataset                                                                       
>                                           *
. * 4. createFolder                                                                             
>                                                   *
. * 5. isFile                                                                                   
>                                                           *
. * 6. removeFolders                                                                            
>                                                   *
. *********************************************************************************
. 
. capture program drop writePolicyDatasetSystem

. program writePolicyDatasetSystem
  1. 
.         local number_of_lines = 0
  2.         file open emconfig using "${path_XMLParam}/${country}/${country}_DataConfig.xml", r
> ead text
  3.         file read emconfig line
  4.         while r(eof) == 0{
  5.                 local number_of_lines = `number_of_lines' + 1
  6.                 file read emconfig line
  7.         }
  8.         local number_of_lines = `number_of_lines' + 1
  9.         file close emconfig
 10.         
.         import excel "${path_EMinput}\other\EUROMOD_Policy_Dataset_Compatibility.xlsx", sheet(
> "ID") firstrow allstring clear
 11.         capture drop dataset datasetid
 12.         tostring *, replace
 13.         list
 14.         
.         file open emconfig using "${path_XMLParam}/${country}/${country}_DataConfig.xml", read
>  text
 15.         file read emconfig line
 16.         
.         local DBSystemConfig_found = 0
 17.         local systemId_found = 0
 18.         
.         local file_l = 0
 19.         local i = 0
 20.         while `file_l' < `number_of_lines'{
 21.                 
.                 local i = `i'+1
 22.                 local file_l = `file_l' + 1
 23.                 //display "i: `i'"
.         
.                 // Read file line by line and save content into local line
.                 file read emconfig line
 24.                 
.                 //display "Line:`i' `line'"
. 
.                 // Save length of the line
.                 local len : length local line
 25.                 
.                 // Find first non-space digit
.                 local n = 1
 26.                 local continue = 1
 27.                 local startchar = 1
 28.                 local endchar = 1
 29.                 
. 
.                 while (`n' < `len') & (`continue') == 1 {
 30.                         local char = substr("`line'", `n', 1)
 31.                         
.                         if "`char'" == "<" { 
 32.                                 local continue = 0
 33.                         }
 34.                         local n = `n' + 1
 35.                         local startchar = `n'
 36.                 }
 37.                         
.                 local continue = 1
 38.                 local numberChars = 0
 39.                 while (`n' < `len') & (`continue') == 1 {
 40.                         local char = substr("`line'", `n', 1)
 41.                         
.                         if "`char'" == ">" { 
 42.                                 local continue = 0
 43.                         }
 44.                         else{
 45.                                 local numberChars = `numberChars' + 1 
 46.                         }
 47.                         
.                         local n = `n' + 1
 48.                         
.                 }
 49.                         
.                 // Extract the first "word"
.                 local tag = substr("`line'", `startchar', `numberChars')
 50.                 local startcount = `startchar' + `numberChars' + 1
 51.                 
.                 //display "i: `i' . tag: `tag'"
.                 *display "Check tag name"
.                 if "`tag'" == "DBSystemConfig" {
 52. 
.                         local DBSystemConfig_found = 1
 53.                         //display "DBSystemConfig_found in line `i'"
. 
.                 }
 54.                 
.                 if "`tag'" == "SystemID" & (`DBSystemConfig_found') == 1{
 55.                         local systemId_found = 1
 56.                         //display "System id found in line `i'"
.                         local foundYear = 0
 57.                         local continue = 1
 58.                         local numberChars = 0
 59.                         local n = `startcount'
 60.                         while (`n' < `len') & (`continue') == 1 {
 61.                                 local char = substr("`line'", `n', 1)
 62.                         
.                                 if "`char'" == "<" { 
 63.                                         local continue = 0
 64.                                 }
 65.                                 else{
 66.                                         local numberChars = `numberChars' + 1 
 67.                                 }
 68.                         
.                                 local n = `n' + 1
 69.                         
.                         }
 70.                         
.                         local systemId = substr("`line'", `startcount', `numberChars')
 71.                         //display "systemId: `systemId'"
.                 }
 72.                 
. 
.                 if "`tag'" == "SystemName" & (`systemId_found') == 1{
 73.                 
.                         local foundYear = 0
 74.                         local continue = 1
 75.                         local numberChars = 0
 76.                         local n = `startcount'
 77.                         while (`n' < `len') & (`continue') == 1 {
 78.                                 local char = substr("`line'", `n', 1)
 79.                         
.                                 if "`char'" == "<" { 
 80.                                         local continue = 0
 81.                                 }
 82.                                 else{
 83.                                         local numberChars = `numberChars' + 1 
 84.                                 }
 85.                         
.                                 local n = `n' + 1
 86.                         
.                         }
 87.                         
.                         local systemName = substr("`line'", `startcount', `numberChars')
 88.                         local systemName_lower = lower("`systemName'")
 89.                         local systemId_found = 0
 90.                         local DBSystemConfig_found = 0
 91.                         
.                         //display "`systemName'"
.                         //display "`systemId'"
.                         capture drop if psystem == "`systemName'"
 92.                         capture drop if psystem == "`systemName_lower'"
 93.                         capture drop if psystemid == "`systemId'"
 94.                         
.                         
.                         set obs `=_N+1'
 95.                         local N = _N
 96.                         //display "N: `N'"
.                         replace psystem="`systemName_lower'" in `N'
 97.                         replace psystemid = "`systemId'" in `N'
 98.                         
. 
.                 }
 99. 
.                 
.         }
100.         
.         // Close files
.         file close emconfig
101.         drop if psystem == ""
102.         list
103.         export excel using "${path_EMinput}\other\EUROMOD_Policy_Dataset_Compatibility.xlsx
> ", sheet("ID") sheetmodify cell(C1) firstrow(variables)
104.         display "End of system id search"
105.         //display "Number of lines: `number_of_lines'"
. 
. end

. 
. capture program drop writePolicyDatasetData

. program writePolicyDatasetData
  1. 
.         local number_of_lines = 0
  2.         file open emconfig using "${path_XMLParam}/${country}/${country}_DataConfig.xml", r
> ead text
  3.         file read emconfig line
  4.         while r(eof) == 0{
  5.                 local number_of_lines = `number_of_lines' + 1
  6.                 file read emconfig line
  7.         }
  8.         local number_of_lines = `number_of_lines' + 1
  9.         file close emconfig
 10.         
.         import excel "${path_EMinput}\other\EUROMOD_Policy_Dataset_Compatibility.xlsx", sheet(
> "ID") firstrow allstring clear
 11.         capture drop psystem psystemid
 12. 
.         tostring *, replace
 13.         
.         file open emconfig using "${path_XMLParam}/${country}/${country}_DataConfig.xml", read
>  text
 14.         file read emconfig line
 15.         
.         local DatabaseConfig_found = 0
 16.         local dataId_found = 0
 17.         
.         local file_l = 0
 18.         local i = 0
 19.         while `file_l' < `number_of_lines'{
 20.                 
.                 local i = `i'+1
 21.                 local file_l = `file_l' + 1
 22.         
.                 // Read file line by line and save content into local line
.                 file read emconfig line
 23.                 
.                 //display "Line:`i' `line'"
. 
.                 // Save length of the line
.                 local len : length local line
 24.                 
.                 // Find first non-space digit
.                 local n = 1
 25.                 local continue = 1
 26.                 local startchar = 1
 27.                 local endchar = 1
 28.                 
. 
.                 while (`n' < `len') & (`continue') == 1 {
 29.                         local char = substr("`line'", `n', 1)
 30.                         
.                         if "`char'" == "<" { 
 31.                                 local continue = 0
 32.                         }
 33.                         local n = `n' + 1
 34.                         local startchar = `n'
 35.                 }
 36.                         
.                 local continue = 1
 37.                 local numberChars = 0
 38.                 while (`n' < `len') & (`continue') == 1 {
 39.                         local char = substr("`line'", `n', 1)
 40.                         
.                         if "`char'" == ">" { 
 41.                                 local continue = 0
 42.                         }
 43.                         else{
 44.                                 local numberChars = `numberChars' + 1 
 45.                         }
 46.                         
.                         local n = `n' + 1
 47.                         
.                 }
 48.                         
.                 // Extract the first "word"
.                 local tag = substr("`line'", `startchar', `numberChars')
 49.                 local startcount = `startchar' + `numberChars' + 1
 50.                 
.                 if "`tag'" == "DataBase" {
 51. 
.                         local DatabaseConfig_found = 1
 52. 
.                 }
 53.                 
.                 if "`tag'" == "ID" & (`DatabaseConfig_found') == 1{
 54.                         local dataId_found = 1
 55. 
.                         local continue = 1
 56.                         local numberChars = 0
 57.                         local n = `startcount'
 58.                         while (`n' < `len') & (`continue') == 1 {
 59.                                 local char = substr("`line'", `n', 1)
 60.                         
.                                 if "`char'" == "<" { 
 61.                                         local continue = 0
 62.                                 }
 63.                                 else{
 64.                                         local numberChars = `numberChars' + 1 
 65.                                 }
 66.                         
.                                 local n = `n' + 1
 67.                         
.                         }
 68.                         
.                         local dataId = substr("`line'", `startcount', `numberChars')
 69.                 }
 70.                 
.                 if "`tag'" == "Name" & (`dataId_found') == 1{
 71.                 
.                         local continue = 1
 72.                         local numberChars = 0
 73.                         local n = `startcount'
 74.                         while (`n' < `len') & (`continue') == 1 {
 75.                                 local char = substr("`line'", `n', 1)
 76.                         
.                                 if "`char'" == "<" { 
 77.                                         local continue = 0
 78.                                 }
 79.                                 else{
 80.                                         local numberChars = `numberChars' + 1 
 81.                                 }
 82.                         
.                                 local n = `n' + 1
 83.                         
.                         }
 84.                         
.                         local dataName = substr("`line'", `startcount', `numberChars')
 85.                         local dataId_found = 0
 86.                         local DatabaseConfig_found = 0
 87.                         
.                         local dataName_lower = lower("`dataName'")
 88.                         capture drop if dataset == "`dataName'"
 89.                         capture drop if dataset == "`dataName_lower'"
 90.                         capture drop if datasetid == "`dataId'"
 91.                         local N = _N
 92.                         set obs `=_N+1'
 93.                         local N = _N
 94.                         
.                         replace dataset="`dataName_lower'" in `N'
 95.                         replace datasetid = "`dataId'" in `N'
 96. 
.                         list
 97.                         
.                 }
 98. 
.                 
.         }
 99.         
.         // Close files
.         file close emconfig
100.         drop if dataset == ""
101.         export excel using "${path_EMinput}\other\EUROMOD_Policy_Dataset_Compatibility.xlsx
> ", sheet("ID") sheetmodify cell(A1) firstrow(variables)
102.         display "Number of lines: `number_of_lines'"
103. 
. end

. 
. capture program drop writePolicyDataset

. program writePolicyDataset
  1.         preserve
  2.         writePolicyDatasetSystem
  3.         writePolicyDatasetData
  4.         restore
  5. end

. 
. *-----------Create Folder to save results ------------------------------
. capture program drop createFolder

. program createFolder
  1. 
.         local output_path="`1'"
  2.         local folderName="`2'"
  3.         
.         local isFolder: dir "`output_path'" dirs "`folderName'"
  4. 
.         if `"`isFolder'"'!=""{
  5.                 display in red "Folder `folderName' already exists"
  6.                 if regexm("`folderName'","temp_folder"){
  7.                         local temp_list:dir "`output_path'/`folderName'" files "*"
  8.                         //Remove auxiliary txt files used as flag in merge_CF_level1.do
.                         foreach file in `temp_list'{
  9.                                 erase "`output_path'/`folderName'/`file'"
 10.                         }
 11.                 }
 12.         }
 13.         else{ 
 14.                 mkdir "`output_path'/`folderName'"
 15.                 display in red "Folder `folderName' will be created"
 16.         }
 17.         
. end

. 
. *--------- Verify if file exists -------------------------------
. capture program drop isFile

. program isFile
  1. 
.         local FileName="`1'"
  2.         local folder="`2'"
  3. 
.         capture findfile "`FileName'", path("`folder'") 
  4.         matrix isfile = J(1,1,.)
  5.         if _rc==0{
  6.                 //display in red "File `FileName' already exists"       
.                 mat isfile[1,1]=1
  7.         }
  8.         else{
  9.                 //display in red "File `FileName' has to be created"
.                 mat isfile[1,1]=0
 10.         }
 11. end

. 
. *--------- Delete auxiliary files and folders created in 3_simulation_dpi --------------------
> --------
. capture program drop removeFolders

. program removeFolders 
  1. 
. //Remove auxiliary folders from EMinput 
. local folders:dir "${path_EMinput}/modified" dirs "*", respectcase
  2. foreach folder in `folders'{
  3.         //di in r "folder `folder'"
.         local files:dir "${path_EMinput}/modified/`folder'" files "*" 
  4.         foreach file in `files'{
  5.                 capture erase "${path_EMinput}/modified/`folder'/`file'"
  6.         }
  7.         capture rmdir "${path_EMinput}/modified/`folder'"
  8. }
  9. 
. local folders:dir "${path_EMinput}/" dirs "*", respectcase
 10. local temp="original other modified"
 11. local folders: list folders - temp
 12. foreach folder in `folders'{
 13.         local files:dir "${path_EMinput}/`folder'" files "*" 
 14.         foreach file in `files'{
 15.                 capture erase "${path_EMinput}/`folder'/`file'"
 16.         }
 17.         capture rmdir "${path_EMinput}/`folder'"
 18. }
 19. 
. //Remove auxiliary folders from EMoutput
. local folders:dir "${path_EMoutput}/modified" dirs "*", respectcase
 20. foreach folder in `folders'{
 21.         local files:dir "${path_EMoutput}/modified/`folder'" files "*"
 22.         foreach file in `files'{
 23.                 capture erase "${path_EMoutput}/modified/`folder'/`file'"
 24.         }
 25.         capture rmdir "${path_EMoutput}/modified/`folder'"
 26. }
 27. 
. //Remove Euromod log files from EMoutput
. local files:dir "${path_EMoutput}/modified/" files "*EUROMOD_Log*"
 28. foreach file in `files'{
 29.         capture erase "${path_EMoutput}/modified/`file'"
 30. }
 31. 
. //Remove datasets from 1_counterfactuals
. local files:dir "${path_LSscen}/1_counterfactuals/" files "*.dta"
 32. foreach file in `files'{
 33.         capture erase "${path_LSscen}/1_counterfactuals/`file'"
 34. }
 35. /*local files:dir "${path_LSscen}/1_counterfactuals/" files "*.txt"
> foreach file in `files'{
>         capture erase "${path_LSscen}/1_counterfactuals/`file'"
> }*/
. 
. //Remove datasets from 2_postEM_appended
. local files:dir "${path_LSscen}/2_postEM_appended/" files "*_f*_*.dta"
 36. foreach file in `files'{
 37.         capture erase "${path_LSscen}/2_postEM_appended/`file'"
 38. }
 39.         
. local temp:dir . files "3a_merge_CF*.log"
 40. foreach file in `temp'{
 41.         capture erase "`file'"
 42. }
 43. 
. local temp:dir . files "3b_merge_CF*.log"
 44. foreach file in `temp'{
 45.         capture erase "`file'"
 46. }
 47. 
. local temp:dir . files "1a_create_input_data*.log"
 48. foreach file in `temp'{
 49.         capture erase "`file'"
 50. }
 51. 
. capture erase "all_globals.dta"
 52. capture erase "all_globals_preparedata.dta"
 53. capture erase "globals_preparedata.dta"
 54. capture erase "1_preparedata.dta"
 55. 
. end

. 
.         
.                 
. 
end of do-file

. di in r "START counterfactuals 1_preparedata: $S_TIME  $S_DATE"
START counterfactuals 1_preparedata: 21:37:58   6 Dec 2022

. if $RUN_COUNTERFACTUALS == 1 {
.         set trace off
.         use "${path_LS}/baseline/${country}_${year}_${choices}ch_baseline_full.dta", clear
.         keep if flex_hh != 0 
(3,305 observations deleted)
. 
.         gen p_hourly_0_0 = 0
.         if "${country}" == "pt" gen liwmy01_a = 0 
.         gen liwmy_a = 0
.         gen lhwpv_a = 0
.         gen yempv_a = 0
.         gen lnu = 0
.         
.         *set to 0 all income components within each global only for flexible sample 
.         foreach yvar in $yem_vars  $yse_vars {
  2.                 foreach yvar in $yem_vars $yse_vars $bun_vars $yse_evaded{
  3.                 sum  `yvar'  if flex_f ==1| flex_m ==1
  4.                 replace `yvar' = 0 if flex_f ==1| flex_m ==1
  5.         }
  6.         }

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         yem |      4,248    819.2197    685.5827          0   5935.381
(3,971 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         yse |      4,248    50.10629    294.8339          0   7489.717
(646 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         bun |      4,248    13.71317    61.72195          0     693.15
(425 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         byr |      4,248    .0715631    4.664245          0        304
(1 real change made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       yunsv |      4,248    5.575221    46.84592          0     693.15
(113 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         yem |      4,248           0           0          0          0
(0 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         yse |      4,248           0           0          0          0
(0 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         bun |      4,248           0           0          0          0
(0 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         byr |      4,248           0           0          0          0
(0 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
       yunsv |      4,248           0           0          0          0
(0 real changes made)
. 
.         if "$country" == "uk" global original_months "liwmy yemmy ysemy"
.         else global original_months "liwmy liwftmy liwptmy yemmy ysemy"
.         foreach var of varlist $original_months {
  2.                 quiet gen `var'_orig= `var'
  3.                 
.         }
.         
.         
.         global reform_no_new ""
.         foreach refs in $reforms{
  2.                 if "`refs'" == "base"{
  3.                         global reform_no_new "`refs'"
  4.                 }
  5.                 else if "`refs'" == "m"{
  6.                         global reform_no_new "${reform_no_new} `refs'"
  7.                 }
  8.                 else if "`refs'" == "f"{
  9.                         global reform_no_new "${reform_no_new} `refs'"
 10.                 }
 11.                 display in r "input data reforms: ${reform_no_new}"
 12.         }
input data reforms: base
input data reforms: base m
input data reforms: base m f
input data reforms: base m f
.                                         
.         //List of global to pass to every new STATA instance (parallelisation)
.         save "1_preparedata",replace
(file 1_preparedata.dta not found)
file 1_preparedata.dta saved
.         
.         local globals="HOURS_DISTRIBUTION step original_months country allvars path_EMinput ye
> ar choices filename"
.         
.         clear
.         set obs 1
Number of observations (_N) was 0, now 1.
.         foreach a of local globals {
  2.                 gen `a'="${`a'}" 
  3.         }
.         save "globals_preparedata.dta",replace
(file globals_preparedata.dta not found)
file globals_preparedata.dta saved
.                 
.         createFolder "${path_EMinput}" "temp_folder_prepData"
Folder temp_folder_prepData will be created
.         local multiplier=1
.         local counter=0
.         foreach ref in $reform_no_new {
  2. 
.                 if "`ref'" == "base" {
  3.                         local multip_m = 1
  4.                         local multip_f = 1
  5.                         local multip_i = 1
  6.                 }
  7.                 else if "`ref'" == "m"{
  8.                         local multip_m = 1.01
  9.                         local multip_f = 1
 10.                         local multip_i = 1
 11.                 }
 12.                 else if "`ref'" == "f" {
 13.                         local multip_m = 1
 14.                         local multip_f = 1.01
 15.                         local multip_i = 1
 16.                 }
 17.                 else {
 18.                         local multip_m = 1
 19.                         local multip_f = 1
 20.                         local multip_i = 1
 21.                 }
 22.                 
.                 foreach i in $hours {
 23.                         foreach j in $hours {
 24.                                 forvalues sec_f = 1/${NumberOfSectors} {
 25.                                         forvalues empstat_f = 1/${EmplStatus} {
 26.                                                 forvalues sec_m = 1/${NumberOfSectors} {
 27.                                                         forvalues empstat_m = 1/${EmplStatu
> s} {
 28.                                                                 local ++counter 
 29.                                                                                            
>                                                                                               
.                                                                 //Launch new STATA instance
.                                                                 di in r  "Create input data `c
> ounter': ref`ref'_f`i'_s`sec_f'_e`empstat_f'_m`j'_s`sec_m'_e`empstat_m'"
 30.                                                                 
.                                                                 di "winexec ${path_stata} /e d
> o 1a_create_input_data `multip_m' `multip_f' `multip_i' `ref' `i' `j' `sec_f' `sec_m' `empstat
> _f' `empstat_m'"
 31.                                                                 
.                                                                 winexec "${path_stata}" "/e" "
> do" "1a_create_input_data" "`multip_m'" "`multip_f'" "`multip_i'" "`ref'" "`i'" "`j'" "`sec_f'
> " "`sec_m'" "`empstat_f'" "`empstat_m'" 
 32.                                                                 
.                                                                 //Look for input data files de
> pending of split_number_STATA before launching more STATA instances. 
.                                                                 local temp_number=`multiplier'
> *$split_number_STATA
 33.                                                                                            
>                                      
.                                                                 if `counter'==`temp_number'{
 34.                                                                         sleep 500
 35.                                                                         local temp_list:dir
>  "${path_EMinput}/temp_folder_prepData/" files "*"
 36.                                                                         local numfiles : wo
> rd count `temp_list'
 37.                                                                         local temp_counter=
> 0
 38.                                                                         while `numfiles'< `
> temp_number' {
 39.                                                                                 local ++tem
> p_counter
 40.                                                                                 if `temp_co
> unter'<50{
 41.                                                                                         sle
> ep 500
 42.                                                                                         loc
> al temp_list:dir "${path_EMinput}/temp_folder_prepData/" files "*"
 43.                                                                                         loc
> al numfiles : word count `temp_list'
 44.                                                                                 }
 45.                                                                                 else{ 
 46.                                                                                         cap
> ture window stopbox rusure "ERROR: STATA instance failed to produce input. You can find more i
> nfo about error in 1a_create_input_data log files in do folder.  Do you want to close STATA?"
 47.                                                                                         if 
> _rc == 0 {
 48.                                                                                            
>      exit, STATA clear
 49.                                                                                         }
 50.                                                                                         els
> e{
 51.                                                                                            
>      stop
 52.                                                                                         }
 53.                                                                                 }
 54.                                                                                 di "Looking
>  for input file: attemp `temp_counter'/50"
 55.                                                                         }
 56.                                                                         local ++multiplier
 57.                                                                 }
 58.                                                                 
.                                                                                         
.                                                                 if (`i' == 0 | `i' == 5) & (`j
> ' == 0 | `j' == 5){
 59.                                                                         continue, break
 60.                                                                 }
 61.                                                                 else if `j' == 0 | `j' == 5
> {
 62.                                                                         continue, break
 63.                                                                 }
 64.                                                         } //End of empstat_m
 65.                                                         if (`i' == 0 | `i' == 5) & (`j' == 
> 0 | `j' == 5){
 66.                                                                 continue, break
 67.                                                         }
 68.                                                         else if `j' == 0 | `j' == 5{
 69.                                                                 continue, break
 70.                                                         }
 71.                                                 } //End of sec_m
 72.                                                 if (`i' == 0 | `i' == 5) & (`j' == 0 | `j' 
> == 5){
 73.                                                         continue, break
 74.                                                 }
 75.                                                 else if `i' == 0 | `i' == 5 {
 76.                                                         continue, break
 77.                                                 }
 78.                                         } //End of empstat_f
 79.                                         if (`i' == 0 | `i' == 5) & (`j' == 0 | `j' == 5){
 80.                                                 continue, break
 81.                                         }
 82.                                         else if `i' == 0 | `i' == 5 {
 83.                                                 continue, break
 84.                                         }
 85.                                 } //End of sec_f
 86.                         } //End of j hours 
 87.                 } //End of i hours 
 88.         } //End of Ref loop
Create input data 1: refbase_f0_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 0 0 1 1 1 
> 1
Create input data 2: refbase_f0_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 0 22 1 1 1
>  1
Create input data 3: refbase_f0_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 0 39 1 1 1
>  1
Create input data 4: refbase_f0_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 0 56 1 1 1
>  1
Create input data 5: refbase_f22_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 22 0 1 1 1
>  1
Create input data 6: refbase_f22_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 22 22 1 1 
> 1 1
Create input data 7: refbase_f22_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 22 39 1 1 
> 1 1
Create input data 8: refbase_f22_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 22 56 1 1 
> 1 1
Looking for input file: attemp 1/50
Looking for input file: attemp 2/50
Looking for input file: attemp 3/50
Looking for input file: attemp 4/50
Looking for input file: attemp 5/50
Looking for input file: attemp 6/50
Looking for input file: attemp 7/50
Looking for input file: attemp 8/50
Looking for input file: attemp 9/50
Looking for input file: attemp 10/50
Looking for input file: attemp 11/50
Looking for input file: attemp 12/50
Looking for input file: attemp 13/50
Looking for input file: attemp 14/50
Create input data 9: refbase_f39_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 39 0 1 1 1
>  1
Create input data 10: refbase_f39_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 39 22 1 1 
> 1 1
Create input data 11: refbase_f39_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 39 39 1 1 
> 1 1
Create input data 12: refbase_f39_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 39 56 1 1 
> 1 1
Create input data 13: refbase_f56_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 56 0 1 1 1
>  1
Create input data 14: refbase_f56_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 56 22 1 1 
> 1 1
Create input data 15: refbase_f56_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 56 39 1 1 
> 1 1
Create input data 16: refbase_f56_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1 1 base 56 56 1 1 
> 1 1
Looking for input file: attemp 1/50
Looking for input file: attemp 2/50
Looking for input file: attemp 3/50
Looking for input file: attemp 4/50
Looking for input file: attemp 5/50
Looking for input file: attemp 6/50
Looking for input file: attemp 7/50
Looking for input file: attemp 8/50
Looking for input file: attemp 9/50
Looking for input file: attemp 10/50
Looking for input file: attemp 11/50
Looking for input file: attemp 12/50
Create input data 17: refm_f0_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 0 0 1 1 1 
> 1
Create input data 18: refm_f0_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 0 22 1 1 1
>  1
Create input data 19: refm_f0_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 0 39 1 1 1
>  1
Create input data 20: refm_f0_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 0 56 1 1 1
>  1
Create input data 21: refm_f22_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 22 0 1 1 1
>  1
Create input data 22: refm_f22_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 22 22 1 1 
> 1 1
Create input data 23: refm_f22_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 22 39 1 1 
> 1 1
Create input data 24: refm_f22_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 22 56 1 1 
> 1 1
Looking for input file: attemp 1/50
Looking for input file: attemp 2/50
Looking for input file: attemp 3/50
Looking for input file: attemp 4/50
Looking for input file: attemp 5/50
Looking for input file: attemp 6/50
Looking for input file: attemp 7/50
Looking for input file: attemp 8/50
Looking for input file: attemp 9/50
Looking for input file: attemp 10/50
Create input data 25: refm_f39_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 39 0 1 1 1
>  1
Create input data 26: refm_f39_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 39 22 1 1 
> 1 1
Create input data 27: refm_f39_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 39 39 1 1 
> 1 1
Create input data 28: refm_f39_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 39 56 1 1 
> 1 1
Create input data 29: refm_f56_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 56 0 1 1 1
>  1
Create input data 30: refm_f56_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 56 22 1 1 
> 1 1
Create input data 31: refm_f56_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 56 39 1 1 
> 1 1
Create input data 32: refm_f56_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1.01 1 1 m 56 56 1 1 
> 1 1
Looking for input file: attemp 1/50
Looking for input file: attemp 2/50
Looking for input file: attemp 3/50
Looking for input file: attemp 4/50
Looking for input file: attemp 5/50
Looking for input file: attemp 6/50
Looking for input file: attemp 7/50
Looking for input file: attemp 8/50
Looking for input file: attemp 9/50
Looking for input file: attemp 10/50
Create input data 33: reff_f0_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 0 0 1 1 1 
> 1
Create input data 34: reff_f0_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 0 22 1 1 1
>  1
Create input data 35: reff_f0_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 0 39 1 1 1
>  1
Create input data 36: reff_f0_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 0 56 1 1 1
>  1
Create input data 37: reff_f22_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 22 0 1 1 1
>  1
Create input data 38: reff_f22_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 22 22 1 1 
> 1 1
Create input data 39: reff_f22_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 22 39 1 1 
> 1 1
Create input data 40: reff_f22_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 22 56 1 1 
> 1 1
Looking for input file: attemp 1/50
Looking for input file: attemp 2/50
Looking for input file: attemp 3/50
Looking for input file: attemp 4/50
Looking for input file: attemp 5/50
Looking for input file: attemp 6/50
Looking for input file: attemp 7/50
Looking for input file: attemp 8/50
Looking for input file: attemp 9/50
Looking for input file: attemp 10/50
Create input data 41: reff_f39_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 39 0 1 1 1
>  1
Create input data 42: reff_f39_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 39 22 1 1 
> 1 1
Create input data 43: reff_f39_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 39 39 1 1 
> 1 1
Create input data 44: reff_f39_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 39 56 1 1 
> 1 1
Create input data 45: reff_f56_s1_e1_m0_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 56 0 1 1 1
>  1
Create input data 46: reff_f56_s1_e1_m22_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 56 22 1 1 
> 1 1
Create input data 47: reff_f56_s1_e1_m39_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 56 39 1 1 
> 1 1
Create input data 48: reff_f56_s1_e1_m56_s1_e1
winexec C:\Program Files\Stata17/StataMP-64.exe /e do 1a_create_input_data 1 1.01 1 f 56 56 1 1 
> 1 1
Looking for input file: attemp 1/50
Looking for input file: attemp 2/50
Looking for input file: attemp 3/50
Looking for input file: attemp 4/50
Looking for input file: attemp 5/50
Looking for input file: attemp 6/50
Looking for input file: attemp 7/50
Looking for input file: attemp 8/50
Looking for input file: attemp 9/50
Looking for input file: attemp 10/50
.         *bys idperson: gen count = _N
.         *assert count ==1 
.         *sort idhh idperson
. }

. cap rm "1_preparedata"

. di in r "Total number of input files=  `counter'"
Total number of input files=  48

. di in r "END 1_preparedata: $S_TIME  $S_DATE"
END 1_preparedata: 21:38:35   6 Dec 2022

. cap log close   
